{"version":3,"file":"vue.js","sources":["../src/observer/dep.js","../src/observer/array.js","../src/observer/index.js","../src/util/next-tick.js","../src/observer/scheduler.js","../src/global-api/const.js","../src/util/index.js","../src/observer/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/codegen.js","../src/compiler/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/vdom/index.js","../src/render.js","../src/global-api/mixin.js","../src/global-api/assets.js","../src/global-api/initExtend.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["// dep和watcher是多对多的关系\r\n\r\n// 每个属性都有自己的dep\r\n\r\nlet id = 0; //dep实例的唯一标识\r\nexport default class Dep {\r\n  constructor() {\r\n    this.id = id++; \r\n    this.subs = []; // 这个是存放watcher的容器\r\n  }\r\n  depend() {\r\n    //   如果当前存在watcher\r\n    if (Dep.target) {\r\n      Dep.target.addDep(this); // 把自身-dep实例存放在watcher里面\r\n    }\r\n  }\r\n  notify() {\r\n    //   依次执行subs里面的watcher更新方法\r\n    this.subs.forEach((watcher) => watcher.update());\r\n  }\r\n  addSub(watcher) {\r\n    //   把watcher加入到自身的subs容器\r\n    this.subs.push(watcher);\r\n  }\r\n}\r\n// 默认Dep.target为null\r\nDep.target=null\r\n// 栈结构用来存watcher\r\nconst targetStack = [];\r\n\r\nexport function pushTarget(watcher) {\r\n  targetStack.push(watcher);\r\n  Dep.target = watcher; // Dep.target指向当前watcher\r\n}\r\nexport function popTarget() {\r\n  targetStack.pop(); // 当前watcher出栈 拿到上一个watcher\r\n  Dep.target = targetStack[targetStack.length - 1];\r\n}\r\n","// 先保留数组原型\r\nconst arrayProto = Array.prototype;\r\n// 然后将arrayMethods继承自数组原型\r\n// 这里是面向切片编程思想（AOP）--不破坏封装的前提下，动态的扩展功能\r\nexport const arrayMethods = Object.create(arrayProto);\r\nlet methodsToPatch = [\r\n  \"push\",\r\n  \"pop\",\r\n  \"shift\",\r\n  \"unshift\",\r\n  \"splice\",\r\n  \"reverse\",\r\n  \"sort\",\r\n];\r\nmethodsToPatch.forEach((method) => {\r\n  arrayMethods[method] = function (...args) {\r\n    //   这里保留原型方法的执行结果\r\n    const result = arrayProto[method].apply(this, args);\r\n    // 这句话是关键\r\n    // this代表的就是数据本身 比如数据是{a:[1,2,3]} 那么我们使用a.push(4)  this就是a  ob就是a.__ob__ 这个属性代表的是该数据已经被响应式观察过了 __ob__对象指的就是Observer实例\r\n    const ob = this.__ob__;\r\n    let inserted;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\":\r\n        inserted = args;\r\n        break;\r\n      case \"splice\":\r\n        inserted = args.slice(2);\r\n      default:\r\n        break;\r\n    }\r\n    if (inserted) ob.observeArray(inserted); // 对新增的每一项进行观测\r\n    ob.dep.notify(); //数组派发更新 ob指的就是数组对应的Observer实例 我们在get的时候判断如果属性的值还是对象那么就在Observer实例的dep收集依赖 所以这里是一一对应的  可以直接更新\r\n    return result;\r\n  };\r\n});\r\n","import { arrayMethods } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observer {\r\n  // 观测值\r\n  constructor(value) {\r\n    this.value = value;\r\n    this.dep = new Dep(); //当数组使用7种重写方法时  是无法进行依赖收集和派发更新的  此属性主要辅助数组更新\r\n    Object.defineProperty(value, \"__ob__\", {\r\n      //  值指代的就是Observer的实例\r\n      value: this,\r\n      //  不可枚举\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true,\r\n    });\r\n\r\n    if (Array.isArray(value)) {\r\n      // 这里对数组做了额外判断\r\n      // 通过重写数组原型方法来对数组的七种方法进行拦截\r\n      value.__proto__ = arrayMethods;\r\n      // 如果数组里面还包含数组 递归判断\r\n      this.observeArray(value);\r\n    } else {\r\n      this.walk(value);\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 让对象上的所有属性依次进行观测\r\n    let keys = Object.keys(data);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      let key = keys[i];\r\n      let value = data[key];\r\n      defineReactive(data, key, value);\r\n    }\r\n  }\r\n  observeArray(items) {\r\n    for (let i = 0; i < items.length; i++) {\r\n      observe(items[i]);\r\n    }\r\n  }\r\n}\r\n// Object.defineProperty数据劫持核心 兼容性在ie9以及以上\r\nfunction defineReactive(data, key, value) {\r\n  let childOb = observe(value); // 递归关键 --如果value还是一个对象会继续走一遍odefineReactive 层层遍历一直到value不是对象才停止\r\n  //   思考？如果Vue数据嵌套层级过深 >>性能会受影响\r\n\r\n  let dep = new Dep(); // 为每个属性实例化一个Dep\r\n\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      // 页面取值的时候 可以把watcher收集到dep里面--依赖收集\r\n      if (Dep.target) {\r\n        // 如果有watcher dep就会保存watcher 同时watcher也会保存dep\r\n        dep.depend();\r\n        if (childOb) {\r\n          // 这里表示 属性的值依然是一个对象 包含数组和对象 childOb指代的就是Observer实例对象  里面的dep进行依赖收集\r\n          // 比如{a:[1,2,3]} 属性a对应的值是一个数组 观测数组的返回值就是对应数组的Observer实例对象\r\n          childOb.dep.depend();\r\n          if (Array.isArray(value)) {\r\n            // 如果数据结构类似 {a:[1,2,[3,4,[5,6]]]} 这种数组多层嵌套  数组包含数组的情况  那么我们访问a的时候 只是对第一层的数组进行了依赖收集 里面的数组因为没访问到  所以五大收集依赖  但是如果我们改变了a里面的第二层数组的值  是需要更新页面的  所以需要对数组递归进行依赖收集\r\n            if (Array.isArray(value)) {\r\n              // 如果内部还是数组\r\n              dependArray(value); // 不停的进行依赖收集\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      if (newValue === value) return;\r\n      // 如果赋值的新值也是一个对象  需要观测\r\n      observe(newValue);\r\n      value = newValue;\r\n      dep.notify(); // 通知渲染watcher去更新--派发更新\r\n    },\r\n  });\r\n}\r\n// 递归收集数组依赖\r\nfunction dependArray(value) {\r\n  for (let e, i = 0, l = value.length; i < l; i++) {\r\n    e = value[i];\r\n    // e.__ob__代表e已经被响应式观测了 但是没有收集依赖 所以把他们收集到自己的Observer实例的dep里面\r\n    e && e.__ob__ && e.__ob__.dep.depend();\r\n    if (Array.isArray(e)) {\r\n      // 如果数组里面还有数组  就递归去收集依赖\r\n      dependArray(e);\r\n    }\r\n  }\r\n}\r\nexport function observe(data) {\r\n  // 递归进行属性劫持\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return;\r\n  }\r\n  return new Observer(data);\r\n}\r\n","let callbacks = [];\r\nlet pending = false;\r\nfunction flushCallbacks() {\r\n \r\n    pending = false;  //把标志还原为false\r\n    // 依次执行回调\r\n    for (let i = 0; i < callbacks.length; i++) {\r\n      callbacks[i]();\r\n    }\r\n}\r\nlet timerFunc; //定义异步方法  采用优雅降级\r\nif (typeof Promise !== \"undefined\") {\r\n  // 如果支持promise\r\n    const p = Promise.resolve();\r\n  timerFunc = () => {\r\n    p.then(flushCallbacks);\r\n  };\r\n} else if (typeof MutationObserver !== \"undefined\") {\r\n  // MutationObserver 主要是监听dom变化 也是一个异步方法\r\n  let counter = 1;\r\n  const observer = new MutationObserver(flushCallbacks);\r\n  const textNode = document.createTextNode(String(counter));\r\n  observer.observe(textNode, {\r\n    characterData: true,\r\n  });\r\n  timerFunc = () => {\r\n    counter = (counter + 1) % 2;\r\n    textNode.data = String(counter);\r\n  };\r\n} else if (typeof setImmediate !== \"undefined\") {\r\n  // 如果前面都不支持 判断setImmediate\r\n  timerFunc = () => {\r\n    setImmediate(flushCallbacks);\r\n  };\r\n} else {\r\n  // 最后降级采用setTimeout\r\n  timerFunc = () => {\r\n    setTimeout(flushCallbacks, 0);\r\n  };\r\n}\r\n\r\nexport function nextTick(cb) {\r\n  // 除了渲染watcher  还有用户自己手动调用的nextTick 一起被收集到数组\r\n  callbacks.push(cb);\r\n  if (!pending) {\r\n    // 如果多次调用nextTick  只会执行一次异步 等异步队列清空之后再把标志变为false\r\n    pending = true;\r\n    timerFunc();\r\n  }\r\n}\r\n","import { nextTick } from \"../util/next-tick\";\r\nlet queue = [];\r\nlet has = {};\r\nfunction flushSchedulerQueue() {\r\n  for (let index = 0; index < queue.length; index++) {\r\n    //   调用watcher的run方法 执行真正的更新操作\r\n    queue[index].run();\r\n  }\r\n  // 执行完之后清空队列\r\n  queue = [];\r\n  has = {};\r\n}\r\n\r\n// 实现异步队列机制\r\nexport function queueWatcher(watcher) {\r\n  const id = watcher.id;\r\n  //   watcher去重\r\n  if (has[id] === undefined) {\r\n    //  同步代码执行 把全部的watcher都放到队列里面去\r\n    queue.push(watcher);\r\n    has[id] = true;\r\n    // 进行异步调用\r\n    nextTick(flushSchedulerQueue);\r\n  }\r\n}\r\n","export const ASSETS_TYPE = [\"component\", \"directive\", \"filter\"];\r\n","import { ASSETS_TYPE } from \"../global-api/const\";\r\nexport const LIFECYCLE_HOOKS = [\r\n  \"beforeCreate\",\r\n  \"created\",\r\n  \"beforeMount\",\r\n  \"mounted\",\r\n  \"beforeUpdate\",\r\n  \"updated\",\r\n  \"beforeDestroy\",\r\n  \"destroyed\",\r\n];\r\n\r\n// 合并策略\r\nconst strats = {};\r\n\r\n//生命周期合并策略\r\nfunction mergeHook(parentVal, childVal) {\r\n  if (childVal) {\r\n    if (parentVal) {\r\n      return parentVal.concat(childVal);\r\n    } else {\r\n      return [childVal];\r\n    }\r\n  } else {\r\n    return parentVal;\r\n  }\r\n}\r\n\r\n// 组件 指令 过滤器的合并策略\r\nfunction mergeAssets(parentVal, childVal) {\r\n  const res = Object.create(parentVal); //比如有同名的全局组件和自己定义的局部组件 那么parentVal代表全局组件 自己定义的组件是childVal  首先会查找自已局部组件有就用自己的  没有就从原型继承全局组件  res.__proto__===parentVal\r\n  if (childVal) {\r\n    for (let k in childVal) {\r\n      res[k] = childVal[k];\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nLIFECYCLE_HOOKS.forEach((hook) => {\r\n  strats[hook] = mergeHook;\r\n});\r\nASSETS_TYPE.forEach((type) => {\r\n  strats[type + \"s\"] = mergeAssets;\r\n});\r\n\r\nexport function mergeOptions(parent, child) {\r\n  const options = {};\r\n  // 遍历父亲\r\n  for (let k in parent) {\r\n    mergeFiled(k);\r\n  }\r\n  // 父亲没有 儿子有\r\n  for (let k in child) {\r\n    if (!parent.hasOwnProperty(k)) {\r\n      mergeFiled(k);\r\n    }\r\n  }\r\n\r\n  function mergeFiled(k) {\r\n    //真正合并字段方法\r\n    if (strats[k]) {\r\n      options[k] = strats[k](parent[k], child[k]);\r\n    } else {\r\n      // 默认策略\r\n      options[k] = child[k] ? child[k] : parent[k];\r\n    }\r\n  }\r\n  return options;\r\n}\r\n\r\nexport function isObject(data) {\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function isReservedTag(tagName) {\r\n  // 定义常见标签\r\n  let str =\r\n    \"html,body,base,head,link,meta,style,title,\" +\r\n    \"address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,\" +\r\n    \"div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,\" +\r\n    \"a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,\" +\r\n    \"s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,\" +\r\n    \"embed,object,param,source,canvas,script,noscript,del,ins,\" +\r\n    \"caption,col,colgroup,table,thead,tbody,td,th,tr,\" +\r\n    \"button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,\" +\r\n    \"output,progress,select,textarea,\" +\r\n    \"details,dialog,menu,menuitem,summary,\" +\r\n    \"content,element,shadow,template,blockquote,iframe,tfoot\";\r\n  let obj = {};\r\n  str.split(\",\").forEach((tag) => {\r\n    obj[tag] = true;\r\n  });\r\n  return obj[tagName];\r\n}\r\n","import { pushTarget, popTarget } from \"./dep\";\r\nimport { queueWatcher } from \"./scheduler\";\r\nimport {isObject} from '../util/index'\r\n// 全局变量id  每次new Watcher都会自增\r\nlet id = 0;\r\n\r\nexport default class Watcher {\r\n  constructor(vm, exprOrFn, cb, options) {\r\n    this.vm = vm;\r\n    this.exprOrFn = exprOrFn;\r\n    this.cb = cb; //回调函数 比如在watcher更新之前可以执行beforeUpdate方法\r\n    this.options = options; //额外的选项 true代表渲染watcher\r\n    this.id = id++; // watcher的唯一标识\r\n    this.deps = []; //存放dep的容器\r\n    this.depsId = new Set(); //用来去重dep\r\n    this.user = options.user; //标识用户watcher\r\n    this.lazy = options.lazy; //标识计算属性watcher\r\n    this.dirty = this.lazy; //dirty可变  表示计算watcher是否需要重新计算-执行用户定义的方法\r\n    // 如果表达式是一个函数\r\n    if (typeof exprOrFn === \"function\") {\r\n      this.getter = exprOrFn;\r\n    } else {\r\n      this.getter = function () {\r\n        //用户watcher传过来的可能是一个字符串   类似a.a.a.a.b\r\n        let path = exprOrFn.split(\".\");\r\n        let obj = vm;\r\n        for (let i = 0; i < path.length; i++) {\r\n          obj = obj[path[i]]; //vm.a.a.a.a.b\r\n        }\r\n        return obj;\r\n      };\r\n    }\r\n    // 非计算属性实例化就会默认调用get方法 进行取值  保留结果\r\n    this.value = this.lazy ? undefined : this.get();\r\n  }\r\n  get() {\r\n    pushTarget(this); // 在调用方法之前先把当前watcher实例推到全局Dep.target上\r\n    const res = this.getter.call(this.vm); //如果watcher是渲染watcher 那么就相当于执行  vm._update(vm._render()) 这个方法在render函数执行的时候会取值 从而实现依赖收集\r\n    popTarget(); // 在调用方法之后把当前watcher实例从全局Dep.target移除\r\n    return res;\r\n  }\r\n  //   把dep放到deps里面 同时保证同一个dep只被保存到watcher一次  同样的  同一个watcher也只会保存在dep一次\r\n  addDep(dep) {\r\n    let id = dep.id;\r\n    if (!this.depsId.has(id)) {\r\n      this.depsId.add(id);\r\n      this.deps.push(dep);\r\n      //   直接调用dep的addSub方法  把自己--watcher实例添加到dep的subs容器里面\r\n      dep.addSub(this);\r\n    }\r\n  }\r\n  //   这里简单的就执行以下get方法  之后涉及到计算属性就不一样了\r\n  update() {\r\n    // 计算属性依赖的值发生变化 只需要把dirty置为true  下次访问到了重新计算\r\n    if (this.lazy) {\r\n      this.dirty = true;\r\n    }else{\r\n      // 每次watcher进行更新的时候  可以让他们先缓存起来  之后再一起调用\r\n      // 异步队列机制\r\n      queueWatcher(this);\r\n    }\r\n  }\r\n  evaluate() {\r\n    this.value = this.get();\r\n    this.dirty = false;\r\n  }\r\n  depend(){\r\n    // 计算属性的watcher存储了依赖项的dep \r\n    let i=this.deps.length\r\n    while(i--){\r\n      this.deps[i].depend() //调用依赖项的dep去收集渲染watcher\r\n    }\r\n  }\r\n  run() {\r\n    const newVal = this.get(); //新值\r\n    const oldVal = this.value; //老值\r\n    this.value = newVal; //跟着之后  老值就成为了现在的值\r\n    if (this.user) {\r\n      if(newVal!==oldVal||isObject(newVal)){\r\n        this.cb.call(this.vm, newVal, oldVal);\r\n      }\r\n    } else {\r\n      // 渲染watcher\r\n      this.cb.call(this.vm);\r\n    }\r\n  }\r\n}\r\n","import Dep from \"./observer/dep.js\";\r\nimport { observe } from \"./observer/index.js\";\r\nimport Watcher from \"./observer/watcher\";\r\n// 初始化状态 注意这里的顺序 比如我经常面试会问到 是否能在data里面直接使用prop的值 为什么？\r\n// 这里初始化的顺序依次是 prop>methods>data>computed>watch\r\nexport function initState(vm) {\r\n  // 获取传入的数据对象\r\n  const opts = vm.$options;\r\n  if (opts.props) {\r\n    initProps(vm);\r\n  }\r\n  if (opts.methods) {\r\n    initMethod(vm);\r\n  }\r\n  if (opts.data) {\r\n    // 初始化data\r\n    initData(vm);\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm);\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm);\r\n  }\r\n}\r\nfunction initProps() {}\r\nfunction initMethod() {}\r\n// 初始化data数据\r\nfunction initData(vm) {\r\n  let data = vm.$options.data;\r\n  //   实例的_data属性就是传入的data\r\n  // vue组件data推荐使用函数 防止数据在组件之间共享\r\n  data = vm._data = typeof data === \"function\" ? data.call(vm) : data;\r\n\r\n  // 把data数据代理到vm 也就是Vue实例上面 我们可以使用this.a来访问this._data.a\r\n  for (let key in data) {\r\n    proxy(vm, `_data`, key);\r\n  }\r\n\r\n  //   对数据进行观测 --响应式数据核心\r\n  observe(data);\r\n}\r\nfunction initComputed(vm) {\r\n  const computed = vm.$options.computed;\r\n\r\n  const watchers = (vm._computedWatchers = {}); //用来存放计算watcher\r\n\r\n  for (let k in computed) {\r\n    const userDef = computed[k]; //获取用户定义的计算属性\r\n    const getter = typeof userDef === \"function\" ? userDef : userDef.get; //创建计算属性watcher使用\r\n    // 创建计算watcher  lazy设置为true\r\n    watchers[k] = new Watcher(vm, getter, () => {}, { lazy: true });\r\n    defineComputed(vm, k, userDef);\r\n  }\r\n}\r\n\r\nconst sharedPropertyDefinition = {\r\n  enumerable: true,\r\n  configurable: true,\r\n  get: () => {},\r\n  set: () => {},\r\n};\r\nfunction defineComputed(target, key, userDef) {\r\n  if (typeof userDef === \"function\") {\r\n    // 如果是一个函数  需要手动赋值到get上\r\n    sharedPropertyDefinition.get = createComputedGetter(key);\r\n  } else {\r\n    sharedPropertyDefinition.get = createComputedGetter(key);\r\n    sharedPropertyDefinition.set = userDef.set;\r\n  }\r\n  Object.defineProperty(target, key, sharedPropertyDefinition);\r\n}\r\n\r\nfunction createComputedGetter(key) {\r\n  return function () {\r\n    const watcher = this._computedWatchers[key]; //获取对应的计算属性watcher\r\n    if (watcher) {\r\n      if (watcher.dirty) {\r\n        watcher.evaluate(); //计算属性取值的时候 如果是脏的  需要重新求值\r\n        // 如果Dep还存在target 这个时候一般为渲染watcher 计算属性依赖的数据也需要收集\r\n        if (Dep.target) {\r\n          watcher.depend()\r\n        }\r\n      }\r\n      return watcher.value;\r\n    }\r\n  };\r\n}\r\n\r\n// 初始化watch\r\nfunction initWatch(vm) {\r\n  let watch = vm.$options.watch;\r\n  for (let k in watch) {\r\n    const handler = watch[k]; //可能是数组 对象 函数 字符串\r\n    if (Array.isArray(handler)) {\r\n      handler.forEach((handle) => {\r\n        createWatcher(vm, k, handle);\r\n      });\r\n    } else {\r\n      createWatcher(vm, k, handler);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createWatcher(vm, exprOrFn, handler, options = {}) {\r\n  if (typeof handler === \"object\") {\r\n    options = handler; //保存用户传入的对象\r\n    handler = handler.handler; //是函数\r\n  }\r\n  if (typeof handler === \"string\") {\r\n    handler = vm[handler];\r\n  }\r\n  return vm.$watch(exprOrFn, handler, options);\r\n}\r\n\r\nfunction proxy(object, sourceKey, key) {\r\n  Object.defineProperty(object, key, {\r\n    get() {\r\n      return object[sourceKey][key];\r\n    },\r\n    set(newValue) {\r\n      object[sourceKey][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function stateMixin(Vue) {\r\n  Vue.prototype.$watch = function (exprOrFn, cb, options) {\r\n    const vm = this;\r\n    // 这里表示是一个用户watcher\r\n    let watcher = new Watcher(vm, exprOrFn, cb, { ...options, user: true });\r\n    if (options.immediate) {\r\n      cb(); //如果立刻执行\r\n    }\r\n  };\r\n}\r\n","// 以下为源码的正则  对正则表达式不清楚的同学可以参考小编之前写的文章(前端进阶高薪必看 - 正则篇);\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //匹配标签名 形如 abc-123\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //匹配特殊标签 形如 abc:234 前面的abc:可有可无\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配标签开始 形如 <abc-123 捕获里面的标签名\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束  >\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾 如 </abc-123> 捕获里面的标签名\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性  形如 id=\"app\"\r\n\r\n// 解析标签生成ast核心\r\nexport function parse(html) {\r\n  let root, currentParent; //代表根节点 和当前父节点\r\n  // 栈结构 来表示开始和结束标签\r\n  let stack = [];\r\n  // 标识元素和文本type\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  // 生成ast方法\r\n  function createASTElement(tagName, attrs) {\r\n    return {\r\n      tag: tagName,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n\r\n  // 对开始标签进行处理\r\n  function handleStartTag({ tagName, attrs }) {\r\n    let element = createASTElement(tagName, attrs);\r\n    if (!root) {\r\n      root = element;\r\n    }\r\n    currentParent = element;\r\n    stack.push(element);\r\n  }\r\n\r\n  // 对结束标签进行处理\r\n  function handleEndTag(tagName) {\r\n    // 栈结构 []\r\n    // 比如 <div><span></span></div> 当遇到第一个结束标签</span>时 会匹配到栈顶<span>元素对应的ast 并取出来\r\n    let element = stack.pop();\r\n    // 当前父元素就是栈顶的上一个元素 在这里就类似div\r\n    currentParent = stack[stack.length - 1];\r\n    // 建立parent和children关系\r\n    if (currentParent) {\r\n      element.parent = currentParent;\r\n      currentParent.children.push(element);\r\n    }\r\n  }\r\n\r\n  // 对文本进行处理\r\n  function handleChars(text) {\r\n    // 去掉空格\r\n    text = text.replace(/\\s/g, \"\");\r\n    if (text) {\r\n      currentParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n      });\r\n    }\r\n  }\r\n  while (html) {\r\n    // 查找<\r\n    let textEnd = html.indexOf(\"<\");\r\n    // 如果<在第一个 那么证明接下来就是一个标签 不管是开始还是结束标签\r\n    if (textEnd === 0) {\r\n      // 如果开始标签解析有结果\r\n      const startTagMatch = parseStartTag();\r\n      if (startTagMatch) {\r\n        // 把解析好的标签名和属性解析生成ast\r\n        handleStartTag(startTagMatch);\r\n        continue;\r\n      }\r\n\r\n      // 匹配结束标签</\r\n      const endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        handleEndTag(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n\r\n    let text;\r\n    // 形如 hello<div></div>\r\n    if (textEnd >= 0) {\r\n      // 获取文本\r\n      text = html.substring(0, textEnd);\r\n    }\r\n    if (text) {\r\n      advance(text.length);\r\n      handleChars(text);\r\n    }\r\n  }\r\n\r\n  // 匹配开始标签\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: [],\r\n      };\r\n      //匹配到了开始标签 就截取掉\r\n      advance(start[0].length);\r\n\r\n      // 开始匹配属性\r\n      // end代表结束符号>  如果不是匹配到了结束标签\r\n      // attr 表示匹配的属性\r\n      let end, attr;\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        advance(attr[0].length);\r\n        attr = {\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5], //这里是因为正则捕获支持双引号 单引号 和无引号的属性值\r\n        };\r\n        match.attrs.push(attr);\r\n      }\r\n      if (end) {\r\n        //   代表一个标签匹配到结束的>了 代表开始标签解析完毕\r\n        advance(1);\r\n        return match;\r\n      }\r\n    }\r\n  }\r\n  //截取html字符串 每次匹配到了就往前继续匹配\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n  //   返回生成的ast\r\n  return root;\r\n}\r\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //匹配花括号 {{  }} 捕获花括号里面的内容\r\n// 判断节点类型  \r\n// 主要包含处理文本核心\r\n// 源码这块包含了复杂的处理  比如 v-once v-for v-if 自定义指令 slot等等  咱们这里只考虑普通文本和变量表达式{{}}的处理\r\n\r\nfunction gen(node) {\r\n  // 如果是元素类型\r\n  if (node.type == 1) {\r\n    //   递归创建\r\n    return generate(node);\r\n  } else {\r\n    //   如果是文本节点\r\n    let text = node.text;\r\n    // 不存在花括号变量表达式\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`;\r\n    }\r\n    // 正则是全局模式 每次需要重置正则的lastIndex属性  不然会引发匹配bug\r\n    let lastIndex = (defaultTagRE.lastIndex = 0);\r\n    let tokens = [];\r\n    let match, index;\r\n\r\n    while ((match = defaultTagRE.exec(text))) {\r\n        // index代表匹配到的位置\r\n      index = match.index;\r\n      if (index > lastIndex) {\r\n        //   匹配到的{{位置  在tokens里面放入普通文本\r\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n      }\r\n    //   放入捕获到的变量内容\r\n      tokens.push(`_s(${match[1].trim()})`);\r\n    //   匹配指针后移\r\n      lastIndex = index + match[0].length;\r\n    }\r\n    // 如果匹配完了花括号  text里面还有剩余的普通文本 那么继续push\r\n    if (lastIndex < text.length) {\r\n      tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n    }\r\n    // _v表示创建文本\r\n    return `_v(${tokens.join(\"+\")})`;\r\n  }\r\n}\r\n\r\n// 处理attrs属性\r\nfunction genProps(attrs) {\r\n  let str = \"\";\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    // 对attrs属性里面的style做特殊处理\r\n    if (attr.name === \"style\") {\r\n      let obj = {};\r\n      attr.value.split(\";\").forEach((item) => {\r\n        let [key, value] = item.split(\":\");\r\n        obj[key] = value;\r\n      });\r\n      attr.value = obj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n  }\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\n// 生成子节点 调用gen函数进行递归创建\r\nfunction getChildren(el) {\r\n  const children = el.children;\r\n  if (children) {\r\n    return `${children.map((c) => gen(c)).join(\",\")}`;\r\n  }\r\n}\r\n// 递归创建生成code\r\nexport function generate(el) {\r\n  let children = getChildren(el);\r\n  let code = `_c('${el.tag}',${\r\n    el.attrs.length ? `${genProps(el.attrs)}` : \"undefined\"\r\n  }${children ? `,${children}` : \"\"})`;\r\n  return code;\r\n}\r\n","import { parse } from \"./parse\";\r\nimport { generate } from \"./codegen\";\r\nexport function compileToFunctions(template) {\r\n  // 我们需要把html字符串变成render函数\r\n  // 1.把html代码转成ast语法树  ast用来描述代码本身形成树结构 不仅可以描述html 也能描述css以及js语法\r\n  // 很多库都运用到了ast 比如 webpack babel eslint等等\r\n  let ast = parse(template);\r\n  // 2.优化静态节点\r\n  // 这个有兴趣的可以去看源码  不影响核心功能就不实现了\r\n  //   if (options.optimize !== false) {\r\n  //     optimize(ast, options);\r\n  //   }\r\n\r\n  // 3.通过ast 重新生成代码\r\n  // 我们最后生成的代码需要和render函数一样\r\n  // 类似_c('div',{id:\"app\"},_c('div',undefined,_v(\"hello\"+_s(name)),_c('span',undefined,_v(\"world\"))))\r\n  // _c代表创建元素 _v代表创建文本 _s代表文Json.stringify--把对象解析成文本\r\n  let code = generate(ast);\r\n  //   使用with语法改变作用域为this  之后调用render函数可以使用call改变this 方便code里面的变量取值\r\n  let renderFn = new Function(`with(this){return ${code}}`);\r\n  return renderFn;\r\n}\r\n","// patch用来渲染和更新视图 \r\nexport function patch(oldVnode, vnode) {\r\n  // 判断传入的oldVnode是否是一个真实元素\r\n  // 这里很关键  初次渲染 传入的vm.$el就是咱们传入的el选项  所以是真实dom\r\n  // 之后更新vm.$el被替换成了更新之前的虚拟dom\r\n  if (!oldVnode) {\r\n    // 组件的创建过程是没有el属性的\r\n    return createElm(vnode);\r\n  } else {\r\n    const isRealElement = oldVnode.nodeType;\r\n    if (isRealElement) {\r\n      // oldVnode是真实dom元素 就代表初次渲染\r\n      const oldElm = oldVnode;\r\n      const parentElm = oldElm.parentNode;\r\n      // 将虚拟dom转化成真实dom节点\r\n      const el = createElm(vnode);\r\n      // 插入到 老的el节点下一个节点的前面 就相当于插入到老的el节点的后面\r\n      // 这里不直接使用父元素appendChild是为了不破坏替换的位置\r\n      parentElm.insertBefore(el, oldElm.nextSibling);\r\n      // 删除老的el节点\r\n      parentElm.removeChild(oldVnode);\r\n      return el;\r\n    } else {\r\n      // oldVnode是虚拟dom 就是更新过程 使用diff算法\r\n      if (oldVnode.tag !== vnode.tag) {\r\n        // 如果新旧标签不一致 用新的替换旧的 oldVnode.el代表的是真实dom节点\r\n        oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el);\r\n      }\r\n      // 如果旧节点是一个文本节点\r\n      if (!oldVnode.tag) {\r\n        if (oldVnode.text !== vnode.text) {\r\n          oldVnode.el.textContent = vnode.text;\r\n        }\r\n      }\r\n      // 不符合上面两种 代表标签一致 并且不是文本节点\r\n      // 为了节点复用 所以直接把旧的虚拟dom对应的真实dom赋值给新的虚拟dom的el属性\r\n      const el = (vnode.el = oldVnode.el);\r\n      // 更新属性\r\n      updateProperties(vnode, oldVnode.data);\r\n\r\n      const oldCh = oldVnode.children || []; // 老的儿子\r\n      const newCh = vnode.children || []; // 新的儿子\r\n      if (oldCh.length > 0 && newCh.length > 0) {\r\n        // 新老都存在子节点\r\n        updateChildren(el, oldCh, newCh);\r\n      } else if (oldCh.length) {\r\n        // 老的有儿子新的没有\r\n        el.innerHTML = \"\";\r\n      } else if (newCh.length) {\r\n        // 新的有儿子\r\n        for (let i = 0; i < newCh.length; i++) {\r\n          const child = newCh[i];\r\n          el.appendChild(createElm(child));\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createComponent(vnode) {\r\n  // 初始化组件\r\n  // 创建组件实例\r\n  let i = vnode.data;\r\n  if ((i = i.hook) && (i = i.init)) {\r\n    i(vnode);\r\n  }\r\n  // 如果组件实例化完毕有componentInstance属性 那证明是组件\r\n  if (vnode.componentInstance) {\r\n    return true;\r\n  }\r\n}\r\n\r\n// 虚拟dom转成真实dom\r\nfunction createElm(vnode) {\r\n  const {\r\n    tag,\r\n    data,\r\n    key,\r\n    children,\r\n    text\r\n  } = vnode;\r\n  //   判断虚拟dom 是元素节点还是文本节点\r\n  if (typeof tag === \"string\") {\r\n    if (createComponent(vnode)) {\r\n      // 如果是组件 返回真实组件渲染的真实dom\r\n      return vnode.componentInstance.$el;\r\n    }\r\n    //   虚拟dom的el属性指向真实dom 方便后续更新diff算法操作\r\n    vnode.el = document.createElement(tag);\r\n    // 解析虚拟dom属性\r\n    updateProperties(vnode);\r\n    // 如果有子节点就递归插入到父节点里面\r\n    children.forEach((child) => {\r\n      return vnode.el.appendChild(createElm(child));\r\n    });\r\n  } else {\r\n    //   文本节点\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el;\r\n}\r\n\r\n// 解析vnode的data属性 映射到真实dom上\r\nfunction updateProperties(vnode, oldProps = {}) {\r\n  const newProps = vnode.data || {};\r\n\r\n  const el = vnode.el; // 真实节点\r\n\r\n  // 如果新的节点没有 需要把老的节点属性移除\r\n  for (const k in oldProps) {\r\n    if (!newProps[k]) {\r\n      el.removeAttribute(k);\r\n    }\r\n  }\r\n  // 对style样式做特殊处理 如果新的没有 需要把老的style值置为空\r\n  const newStyle = newProps.style || {};\r\n  const oldStyle = oldProps.style || {};\r\n  for (const key in oldStyle) {\r\n    if (!newStyle[key]) {\r\n      el.style[key] = \"\";\r\n    }\r\n  }\r\n  // 遍历新的属性 进行增加操作\r\n  for (const key in newProps) {\r\n    if (key === \"style\") {\r\n      for (const styleName in newProps.style) {\r\n        el.style[styleName] = newProps.style[styleName];\r\n      }\r\n    } else if (key === \"class\") {\r\n      el.className = newProps.class;\r\n    } else {\r\n      // 给这个元素添加属性 值就是对应的值\r\n      el.setAttribute(key, newProps[key]);\r\n    }\r\n  }\r\n}\r\n\r\n// 判断两个vnode的标签和key是否相同 如果相同 就可以认为是同一节点就地复用\r\nfunction isSameVnode(oldVnode, newVnode) {\r\n  return oldVnode.tag === newVnode.tag && oldVnode.key === newVnode.key;\r\n}\r\n// diff算法核心 采用双指针的方式 对比新老vnode的儿子节点\r\nfunction updateChildren(parent, oldCh, newCh) {\r\n  let oldStartIndex = 0; //老儿子的起始下标\r\n  let oldStartVnode = oldCh[0]; //老儿子的第一个节点\r\n  let oldEndIndex = oldCh.length - 1; //老儿子的结束下标\r\n  let oldEndVnode = oldCh[oldEndIndex]; //老儿子的起结束节点\r\n\r\n  let newStartIndex = 0; //同上  新儿子的\r\n  let newStartVnode = newCh[0];\r\n  let newEndIndex = newCh.length - 1;\r\n  let newEndVnode = newCh[newEndIndex];\r\n\r\n  // 根据key来创建老的儿子的index映射表  类似 {'a':0,'b':1} 代表key为'a'的节点在第一个位置 key为'b'的节点在第二个位置\r\n  function makeIndexByKey(children) {\r\n    let map = {};\r\n    children.forEach((item, index) => {\r\n      map[item.key] = index;\r\n    });\r\n    return map;\r\n  }\r\n  // 生成的映射表\r\n  let map = makeIndexByKey(oldCh);\r\n\r\n  // 只有当新老儿子的双指标的起始位置不大于结束位置的时候  才能循环 一方停止了就需要结束循环\r\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n    // 因为暴力对比过程把移动的vnode置为 undefined 如果不存在vnode节点 直接跳过\r\n    if (!oldStartVnode) {\r\n      oldStartVnode = oldCh[++oldStartIndex]\r\n    } else if (!oldEndVnode) {\r\n      oldEndVnode = oldCh[--oldEndIndex]\r\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n      // 头和头对比 依次向后追加\r\n      patch(oldStartVnode, newStartVnode); //递归比较儿子以及他们的子节点\r\n      oldStartVnode = oldCh[++oldStartIndex];\r\n      newStartVnode = newCh[++newStartIndex];\r\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n      //尾和尾对比 依次向前追加\r\n      patch(oldEndVnode, newEndVnode);\r\n      oldEndVnode = oldCh[--oldEndIndex];\r\n      newEndVnode = newCh[--newEndIndex];\r\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n      // 老的头和新的尾相同 把老的头部移动到尾部\r\n      patch(oldStartVnode, newEndVnode);\r\n      parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling); //insertBefore可以移动或者插入真实dom\r\n      oldStartVnode = oldCh[++oldStartIndex];\r\n      newEndVnode = newCh[--newEndIndex];\r\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n      // 老的尾和新的头相同 把老的尾部移动到头部\r\n      patch(oldEndVnode, newStartVnode);\r\n      parent.insertBefore(oldEndVnode.el, oldStartVnode.el);\r\n      oldEndVnode = oldCh[--oldEndIndex];\r\n      newStartVnode = newCh[++newStartIndex];\r\n    } else {\r\n      // 上述四种情况都不满足 那么需要暴力对比\r\n      // 根据老的子节点的key和index的映射表 从新的开始子节点进行查找 如果可以找到就进行移动操作 如果找不到则直接进行插入\r\n      let moveIndex = map[newStartVnode.key];\r\n      if (!moveIndex) {\r\n        // 老的节点找不到  直接插入\r\n        parent.insertBefore(createElm(newStartVnode), oldStartVnode.el);\r\n      } else {\r\n        let moveVnode = oldCh[moveIndex]; //找得到就拿到老的节点\r\n        oldCh[moveIndex] = undefined; //这个是占位操作 避免数组塌陷  防止老节点移动走了之后破坏了初始的映射表位置\r\n        parent.insertBefore(moveVnode.el, oldStartVnode.el); //把找到的节点移动到最前面\r\n        patch(moveVnode, newStartVnode);\r\n      }\r\n    }\r\n  }\r\n  // 如果老节点循环完毕了 但是新节点还有  证明  新节点需要被添加到头部或者尾部\r\n  if (newStartIndex <= newEndIndex) {\r\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n      // 这是一个优化写法 insertBefore的第一个参数是null等同于appendChild作用\r\n      const ele =\r\n        newCh[newEndIndex + 1] == null ? null : newCh[newEndIndex + 1].el;\r\n      parent.insertBefore(createElm(newCh[i]), ele);\r\n    }\r\n  }\r\n  // 如果新节点循环完毕 老节点还有  证明老的节点需要直接被删除\r\n  if (oldStartIndex <= oldEndIndex) {\r\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n      let child = oldCh[i];\r\n      if (child != undefined) {\r\n        parent.removeChild(child.el)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import {\r\n  patch\r\n} from \"./vdom/patch\";\r\nimport Watcher from \"./observer/watcher\";\r\nexport function mountComponent(vm, el) {\r\n\r\n  // 上一步模板编译解析生成了render函数\r\n  // 下一步就是执行vm._render()方法 调用生成的render函数 生成虚拟dom\r\n  // 最后使用vm._update()方法把虚拟dom渲染到页面\r\n\r\n  // 真实的el赋值给实例的$el属性\r\n  vm.$el = el;\r\n  //   _update和._render方法都是挂载在Vue原型的方法  类似_init\r\n\r\n  // 引入watcher的概念 这里注册一个渲染watcher 执行vm._update(vm._render())方法渲染视图\r\n  callHook(vm, \"beforeMount\");\r\n  let updateComponent = () => {\r\n    vm._update(vm._render());\r\n  };\r\n  new Watcher(\r\n    vm,\r\n    updateComponent,\r\n    () => {\r\n      callHook(vm, \"beforeUpdate\");\r\n    },\r\n    true\r\n  );\r\n  callHook(vm, \"mounted\");\r\n}\r\n\r\nexport function lifecycleMixin(Vue) {\r\n  // 把_update挂载在Vue的原型\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this;\r\n    const prevVnode = vm._vnode; // 保留上一次的vnode\r\n    vm._vnode = vnode;\r\n    if (!prevVnode) {\r\n      // patch是渲染vnode为真实dom核心\r\n      vm.$el = patch(vm.$el, vnode); // 初次渲染 vm._vnode肯定不存在 要通过虚拟节点 渲染出真实的dom 赋值给$el属性\r\n    } else {\r\n      vm.$el = patch(prevVnode, vnode); // 更新时把上次的vnode和这次更新的vnode穿进去 进行diff算法\r\n    }\r\n  };\r\n}\r\n\r\nexport function callHook(vm, hook) {\r\n  // 依次执行生命周期对应的方法\r\n  const handlers = vm.$options[hook];\r\n  if (handlers) {\r\n    for (let i = 0; i < handlers.length; i++) {\r\n      handlers[i].call(vm); //生命周期里面的this指向当前实例\r\n    }\r\n  }\r\n}","import { initState } from \"./state\";\r\nimport { compileToFunctions } from \"./compiler/index\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { mergeOptions } from \"./util/index\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this;\r\n    // 这里的this代表调用_init方法的对象(实例对象)\r\n    //  this.$options就是用户new Vue的时候传入的属性和全局的Vue.options合并之后的结果\r\n    vm.$options = mergeOptions(vm.constructor.options, options);\r\n    callHook(vm, \"beforeCreate\");\r\n    // 初始化状态\r\n    initState(vm);\r\n    callHook(vm, \"created\");\r\n    // 如果有el属性 进行模板渲染\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n\r\n  // 这块代码在源码里面的位置其实是放在entry-runtime-with-compiler.js里面\r\n  // 代表的是Vue源码里面包含了compile编译功能 这个和runtime-only版本需要区分开\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    const options = vm.$options;\r\n    el = document.querySelector(el);\r\n\r\n    // 如果不存在render属性\r\n    if (!options.render) {\r\n      // 如果存在template属性\r\n      let template = options.template;\r\n\r\n      if (!template && el) {\r\n        // 如果不存在render和template 但是存在el属性 直接将模板赋值到el所在的外层html结构（就是el本身 并不是父元素）\r\n        template = el.outerHTML;\r\n      }\r\n\r\n      // 最终需要把tempalte模板转化成render函数\r\n      if (template) {\r\n        const render = compileToFunctions(template);\r\n        options.render = render;\r\n      }\r\n    }\r\n\r\n    // 将当前组件实例挂载到真实的el节点上面\r\n    return mountComponent(vm, el);\r\n  };\r\n}\r\n","import { isObject, isReservedTag } from \"../util/index\";\r\n// 定义Vnode类\r\nexport default class Vnode {\r\n  constructor(tag, data, key, children, text, componentOptions) {\r\n    console.log(\r\n      \"🚀 ~ file: index.js ~ line 5 ~ Vnode ~ constructor ~ componentOptions\",\r\n      componentOptions\r\n    );\r\n    this.tag = tag;\r\n    this.data = data;\r\n    this.key = key;\r\n    this.children = children;\r\n    this.text = text;\r\n    this.componentOptions = componentOptions;\r\n  }\r\n}\r\n\r\n// 创建元素vnode 等于render函数里面的 h=>h(App)\r\nexport function createElement(vm, tag, data = {}, ...children) {\r\n  let key = data.key;\r\n\r\n  if (isReservedTag(tag)) {\r\n    // 如果是普通标签\r\n    return new Vnode(tag, data, key, children);\r\n  } else {\r\n    // 否则就是组件\r\n    let Ctor = vm.$options.components[tag]; //获取组件的构造函数\r\n    return createComponent(vm, tag, data, key, children, Ctor);\r\n  }\r\n}\r\n\r\nfunction createComponent(vm, tag, data, key, children, Ctor) {\r\n  if (isObject(Ctor)) {\r\n    Ctor = vm.$options._base.extend(Ctor);\r\n  }\r\n  // 声明组件自己内部的生命周期\r\n  data.hook = {\r\n    // 组件创建过程的自身初始化方法\r\n    init(vnode) {\r\n      let child = (vnode.componentInstance = new Ctor({ _isComponent: true })); //实例化组件\r\n      child.$mount(); //因为没有传入el属性  需要手动挂载 为了在组件实例上面增加$el方法可用于生成组件的真实渲染节点\r\n    },\r\n  };\r\n\r\n  // 组件vnode也叫占位符vnode  ==> $vnode\r\n  return new Vnode(\r\n    `vue-component-${Ctor.cid}-${tag}`,\r\n    data,\r\n    key,\r\n    undefined,\r\n    undefined,\r\n    {\r\n      Ctor,\r\n      children,\r\n    }\r\n  );\r\n}\r\n\r\n// 创建文本vnode\r\nexport function createTextNode(vm, text) {\r\n  return new Vnode(undefined, undefined, undefined, undefined, text);\r\n}\r\n","import { createElement, createTextNode } from \"./vdom/index\";\r\nimport { nextTick } from \"./util/next-tick\";\r\n\r\nexport function renderMixin(Vue) {\r\n  // render函数里面有_c _v _s方法需要定义\r\n  Vue.prototype._c = function (...args) {\r\n    // 创建虚拟dom元素\r\n    return createElement(this,...args);\r\n  };\r\n\r\n  Vue.prototype._v = function (text) {\r\n    // 创建虚拟dom文本\r\n    return createTextNode(this,text);\r\n  };\r\n  Vue.prototype._s = function (val) {\r\n    // 如果模板里面的是一个对象  需要JSON.stringify\r\n    return val == null\r\n      ? \"\"\r\n      : typeof val === \"object\"\r\n      ? JSON.stringify(val)\r\n      : val;\r\n  };\r\n\r\n  Vue.prototype._render = function () {\r\n    \r\n    const vm = this;\r\n    // 获取模板编译生成的render方法\r\n    const { render } = vm.$options;\r\n    console.log(\"🚀 ~ file: render.js ~ line 28 ~ renderMixin ~ render\", render);\r\n    // 生成vnode--虚拟dom\r\n    const vnode = render.call(vm);\r\n    return vnode;\r\n  };\r\n\r\n  // 挂载在原型的nextTick方法 可供用户手动调用\r\n  Vue.prototype.$nextTick = nextTick;\r\n}\r\n","import {mergeOptions} from '../util/index'\r\nexport default function initMixin(Vue){\r\n  Vue.mixin = function (mixin) {\r\n    //   合并对象\r\n      this.options=mergeOptions(this.options,mixin)\r\n  };\r\n}","import { ASSETS_TYPE } from './const'\r\nexport default function initAssetRegisters(Vue) {\r\n  ASSETS_TYPE.forEach((type) => {\r\n    Vue[type] = function(id, definition) {\r\n      if (type === 'component') {\r\n        // 全局组件注册\r\n        // 子组件可能也有extend方法  VueComponent.component方法\r\n        definition = this.options._base.extend(definition)\r\n      } else if (type === 'filter') {\r\n      } else if (type === 'directive') {\r\n      }\r\n      this.options[type + 's'][id] = definition\r\n    }\r\n  })\r\n}\r\n","import { mergeOptions } from \"../util/index\";\r\nexport default function initExtend(Vue) {\r\n  let cid = 0; \r\n  // 创建子类继承Vue父类 便于属性扩展\r\n  Vue.extend = function (extendOptions) {\r\n    // 创建子类的构造函数 并且调用初始化方法\r\n    const Sub = function VueComponent(options) {\r\n      this._init(options);\r\n    };\r\n    Sub.cid = cid++; //组件的唯一标识\r\n    Sub.prototype = Object.create(this.prototype); // 子类原型指向父类\r\n    Sub.prototype.constructor = Sub; //constructor指向自己\r\n    Sub.options = mergeOptions(this.options, extendOptions); //合并自己的options和父类的options\r\n    return Sub;\r\n  };\r\n}\r\n","import initMixin from \"./mixin\";\r\nimport initAssetRegisters from \"./assets\";\r\nimport initExtend from './initExtend'\r\nimport {ASSETS_TYPE} from './const'\r\n\r\n\r\nexport function initGlobalApi(Vue) {\r\n  Vue.options = {}; // 全局的组件 指令 过滤器\r\n  initMixin(Vue);\r\n  ASSETS_TYPE.forEach((type) => {\r\n    Vue.options[type + \"s\"] = {};\r\n  });\r\n  Vue.options._base = Vue; //_base是Vue的构造函数\r\n\r\n  initExtend(Vue) //注册extend方法\r\n  initAssetRegisters(Vue); //assets注册方法\r\n}\r\n","import { initMixin } from \"./init.js\";\r\nimport { lifecycleMixin } from \"./lifecycle\";\r\nimport { renderMixin } from \"./render\";\r\nimport {initGlobalApi}from './global-api/index'\r\nimport {stateMixin}from './state'\r\n// Vue就是一个构造函数 通过new关键字进行实例化\r\nfunction Vue(options) {\r\n  // 这里开始进行Vue初始化工作\r\n  this._init(options);\r\n}\r\n// _init方法是挂载在Vue原型的方法 通过引入文件的方式进行原型挂载需要传入Vue\r\n// 此做法有利于代码分割\r\ninitMixin(Vue);\r\nrenderMixin(Vue);\r\nlifecycleMixin(Vue);\r\nstateMixin(Vue);\r\ninitGlobalApi(Vue)\r\nexport default Vue;\r\n"],"names":["id","Dep","subs","target","addDep","forEach","watcher","update","push","targetStack","pushTarget","popTarget","pop","length","arrayProto","Array","prototype","arrayMethods","Object","create","methodsToPatch","method","args","result","apply","ob","__ob__","inserted","slice","observeArray","dep","notify","Observer","value","defineProperty","enumerable","writable","configurable","isArray","__proto__","walk","data","keys","i","key","defineReactive","items","observe","childOb","get","depend","dependArray","set","newValue","e","l","callbacks","pending","flushCallbacks","timerFunc","Promise","p","resolve","then","MutationObserver","counter","observer","textNode","document","createTextNode","String","characterData","setImmediate","setTimeout","nextTick","cb","queue","has","flushSchedulerQueue","index","run","queueWatcher","undefined","ASSETS_TYPE","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","mergeAssets","res","k","hook","type","mergeOptions","parent","child","options","mergeFiled","hasOwnProperty","isObject","isReservedTag","tagName","str","obj","split","tag","Watcher","vm","exprOrFn","deps","depsId","Set","user","lazy","dirty","getter","path","call","add","addSub","newVal","oldVal","initState","opts","$options","props","methods","initData","computed","initComputed","watch","initWatch","_data","proxy","watchers","_computedWatchers","userDef","defineComputed","sharedPropertyDefinition","createComputedGetter","evaluate","handler","handle","createWatcher","$watch","object","sourceKey","stateMixin","Vue","immediate","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","parse","html","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","attrs","children","handleStartTag","element","handleEndTag","handleChars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","start","end","attr","name","n","defaultTagRE","gen","node","generate","test","JSON","stringify","lastIndex","tokens","exec","trim","join","genProps","item","getChildren","el","map","c","code","compileToFunctions","template","ast","renderFn","Function","patch","oldVnode","vnode","createElm","isRealElement","nodeType","oldElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","textContent","updateProperties","oldCh","newCh","updateChildren","innerHTML","appendChild","createComponent","init","componentInstance","$el","createElement","oldProps","newProps","removeAttribute","newStyle","style","oldStyle","styleName","className","setAttribute","isSameVnode","newVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","moveIndex","moveVnode","ele","mountComponent","callHook","updateComponent","_update","_render","lifecycleMixin","prevVnode","_vnode","handlers","initMixin","_init","constructor","$mount","querySelector","render","outerHTML","Vnode","componentOptions","console","log","Ctor","components","_base","extend","_isComponent","cid","renderMixin","_c","_v","_s","val","$nextTick","mixin","initAssetRegisters","definition","initExtend","extendOptions","Sub","VueComponent","initGlobalApi"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EAEA;EAEA,IAAIA,IAAE,GAAG,CAAT;;MACqBC;EACnB,iBAAc;EAAA;;EACZ,SAAKD,EAAL,GAAUA,IAAE,EAAZ;EACA,SAAKE,IAAL,GAAY,EAAZ,CAFY;EAGb;;;;aACD,kBAAS;EACP;EACA,UAAID,GAAG,CAACE,MAAR,EAAgB;EACdF,QAAAA,GAAG,CAACE,MAAJ,CAAWC,MAAX,CAAkB,IAAlB,EADc;EAEf;EACF;;;aACD,kBAAS;EACP;EACA,WAAKF,IAAL,CAAUG,OAAV,CAAkB,UAACC,OAAD;EAAA,eAAaA,OAAO,CAACC,MAAR,EAAb;EAAA,OAAlB;EACD;;;aACD,gBAAOD,OAAP,EAAgB;EACd;EACA,WAAKJ,IAAL,CAAUM,IAAV,CAAeF,OAAf;EACD;;;;;EAGHL,GAAG,CAACE,MAAJ,GAAW,IAAX;;EAEA,IAAMM,WAAW,GAAG,EAApB;EAEO,SAASC,UAAT,CAAoBJ,OAApB,EAA6B;EAClCG,EAAAA,WAAW,CAACD,IAAZ,CAAiBF,OAAjB;EACAL,EAAAA,GAAG,CAACE,MAAJ,GAAaG,OAAb,CAFkC;EAGnC;EACM,SAASK,SAAT,GAAqB;EAC1BF,EAAAA,WAAW,CAACG,GAAZ,GAD0B;;EAE1BX,EAAAA,GAAG,CAACE,MAAJ,GAAaM,WAAW,CAACA,WAAW,CAACI,MAAZ,GAAqB,CAAtB,CAAxB;EACD;;ECrCD;EACA,IAAMC,UAAU,GAAGC,KAAK,CAACC,SAAzB;EAEA;;EACO,IAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,UAAd,CAArB;EACP,IAAIM,cAAc,GAAG,CACnB,MADmB,EAEnB,KAFmB,EAGnB,OAHmB,EAInB,SAJmB,EAKnB,QALmB,EAMnB,SANmB,EAOnB,MAPmB,CAArB;EASAA,cAAc,CAACf,OAAf,CAAuB,UAACgB,MAAD,EAAY;EACjCJ,EAAAA,YAAY,CAACI,MAAD,CAAZ,GAAuB,YAAmB;EAAA,sCAANC,IAAM;EAANA,MAAAA,IAAM;EAAA;;EACxC;EACA,QAAMC,MAAM,GAAGT,UAAU,CAACO,MAAD,CAAV,CAAmBG,KAAnB,CAAyB,IAAzB,EAA+BF,IAA/B,CAAf,CAFwC;EAIxC;;EACA,QAAMG,EAAE,GAAG,KAAKC,MAAhB;EACA,QAAIC,QAAJ;;EACA,YAAQN,MAAR;EACE,WAAK,MAAL;EACA,WAAK,SAAL;EACEM,QAAAA,QAAQ,GAAGL,IAAX;EACA;;EACF,WAAK,QAAL;EACEK,QAAAA,QAAQ,GAAGL,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX;EANJ;;EAUA,QAAID,QAAJ,EAAcF,EAAE,CAACI,YAAH,CAAgBF,QAAhB,EAjB0B;;EAkBxCF,IAAAA,EAAE,CAACK,GAAH,CAAOC,MAAP,GAlBwC;;EAmBxC,WAAOR,MAAP;EACD,GApBD;EAqBD,CAtBD;;MCXMS;EACJ;EACA,oBAAYC,KAAZ,EAAmB;EAAA;;EACjB,SAAKA,KAAL,GAAaA,KAAb;EACA,SAAKH,GAAL,GAAW,IAAI7B,GAAJ,EAAX,CAFiB;;EAGjBiB,IAAAA,MAAM,CAACgB,cAAP,CAAsBD,KAAtB,EAA6B,QAA7B,EAAuC;EACrC;EACAA,MAAAA,KAAK,EAAE,IAF8B;EAGrC;EACAE,MAAAA,UAAU,EAAE,KAJyB;EAKrCC,MAAAA,QAAQ,EAAE,IAL2B;EAMrCC,MAAAA,YAAY,EAAE;EANuB,KAAvC;;EASA,QAAItB,KAAK,CAACuB,OAAN,CAAcL,KAAd,CAAJ,EAA0B;EACxB;EACA;EACAA,MAAAA,KAAK,CAACM,SAAN,GAAkBtB,YAAlB,CAHwB;;EAKxB,WAAKY,YAAL,CAAkBI,KAAlB;EACD,KAND,MAMO;EACL,WAAKO,IAAL,CAAUP,KAAV;EACD;EACF;;;;aACD,cAAKQ,IAAL,EAAW;EACT;EACA,UAAIC,IAAI,GAAGxB,MAAM,CAACwB,IAAP,CAAYD,IAAZ,CAAX;;EACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAAC7B,MAAzB,EAAiC8B,CAAC,EAAlC,EAAsC;EACpC,YAAIC,GAAG,GAAGF,IAAI,CAACC,CAAD,CAAd;EACA,YAAIV,KAAK,GAAGQ,IAAI,CAACG,GAAD,CAAhB;EACAC,QAAAA,cAAc,CAACJ,IAAD,EAAOG,GAAP,EAAYX,KAAZ,CAAd;EACD;EACF;;;aACD,sBAAaa,KAAb,EAAoB;EAClB,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,KAAK,CAACjC,MAA1B,EAAkC8B,CAAC,EAAnC,EAAuC;EACrCI,QAAAA,OAAO,CAACD,KAAK,CAACH,CAAD,CAAN,CAAP;EACD;EACF;;;;;;;EAGH,SAASE,cAAT,CAAwBJ,IAAxB,EAA8BG,GAA9B,EAAmCX,KAAnC,EAA0C;EACxC,MAAIe,OAAO,GAAGD,OAAO,CAACd,KAAD,CAArB,CADwC;EAExC;;EAEA,MAAIH,GAAG,GAAG,IAAI7B,GAAJ,EAAV,CAJwC;;EAMxCiB,EAAAA,MAAM,CAACgB,cAAP,CAAsBO,IAAtB,EAA4BG,GAA5B,EAAiC;EAC/BK,IAAAA,GAD+B,iBACzB;EACJ;EACA,UAAIhD,GAAG,CAACE,MAAR,EAAgB;EACd;EACA2B,QAAAA,GAAG,CAACoB,MAAJ;;EACA,YAAIF,OAAJ,EAAa;EACX;EACA;EACAA,UAAAA,OAAO,CAAClB,GAAR,CAAYoB,MAAZ;;EACA,cAAInC,KAAK,CAACuB,OAAN,CAAcL,KAAd,CAAJ,EAA0B;EACxB;EACA,gBAAIlB,KAAK,CAACuB,OAAN,CAAcL,KAAd,CAAJ,EAA0B;EACxB;EACAkB,cAAAA,WAAW,CAAClB,KAAD,CAAX,CAFwB;EAGzB;EACF;EACF;EACF;;EACD,aAAOA,KAAP;EACD,KApB8B;EAqB/BmB,IAAAA,GArB+B,eAqB3BC,QArB2B,EAqBjB;EACZ,UAAIA,QAAQ,KAAKpB,KAAjB,EAAwB,OADZ;;EAGZc,MAAAA,OAAO,CAACM,QAAD,CAAP;EACApB,MAAAA,KAAK,GAAGoB,QAAR;EACAvB,MAAAA,GAAG,CAACC,MAAJ,GALY;EAMb;EA3B8B,GAAjC;EA6BD;;;EAED,SAASoB,WAAT,CAAqBlB,KAArB,EAA4B;EAC1B,OAAK,IAAIqB,CAAJ,EAAOX,CAAC,GAAG,CAAX,EAAcY,CAAC,GAAGtB,KAAK,CAACpB,MAA7B,EAAqC8B,CAAC,GAAGY,CAAzC,EAA4CZ,CAAC,EAA7C,EAAiD;EAC/CW,IAAAA,CAAC,GAAGrB,KAAK,CAACU,CAAD,CAAT,CAD+C;;EAG/CW,IAAAA,CAAC,IAAIA,CAAC,CAAC5B,MAAP,IAAiB4B,CAAC,CAAC5B,MAAF,CAASI,GAAT,CAAaoB,MAAb,EAAjB;;EACA,QAAInC,KAAK,CAACuB,OAAN,CAAcgB,CAAd,CAAJ,EAAsB;EACpB;EACAH,MAAAA,WAAW,CAACG,CAAD,CAAX;EACD;EACF;EACF;;EACM,SAASP,OAAT,CAAiBN,IAAjB,EAAuB;EAC5B;EACA,MAAI,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,IAAI,IAAxC,EAA8C;EAC5C;EACD;;EACD,SAAO,IAAIT,QAAJ,CAAaS,IAAb,CAAP;EACD;;ECjGD,IAAIe,SAAS,GAAG,EAAhB;EACA,IAAIC,OAAO,GAAG,KAAd;;EACA,SAASC,cAAT,GAA0B;EAEtBD,EAAAA,OAAO,GAAG,KAAV,CAFsB;EAGtB;;EACA,OAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,SAAS,CAAC3C,MAA9B,EAAsC8B,CAAC,EAAvC,EAA2C;EACzCa,IAAAA,SAAS,CAACb,CAAD,CAAT;EACD;EACJ;;EACD,IAAIgB,SAAJ;;EACA,IAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;EAClC;EACE,MAAMC,CAAC,GAAGD,OAAO,CAACE,OAAR,EAAV;;EACFH,EAAAA,SAAS,GAAG,qBAAM;EAChBE,IAAAA,CAAC,CAACE,IAAF,CAAOL,cAAP;EACD,GAFD;EAGD,CAND,MAMO,IAAI,OAAOM,gBAAP,KAA4B,WAAhC,EAA6C;EAClD;EACA,MAAIC,OAAO,GAAG,CAAd;EACA,MAAMC,QAAQ,GAAG,IAAIF,gBAAJ,CAAqBN,cAArB,CAAjB;EACA,MAAMS,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwBC,MAAM,CAACL,OAAD,CAA9B,CAAjB;EACAC,EAAAA,QAAQ,CAACnB,OAAT,CAAiBoB,QAAjB,EAA2B;EACzBI,IAAAA,aAAa,EAAE;EADU,GAA3B;;EAGAZ,EAAAA,SAAS,GAAG,qBAAM;EAChBM,IAAAA,OAAO,GAAG,CAACA,OAAO,GAAG,CAAX,IAAgB,CAA1B;EACAE,IAAAA,QAAQ,CAAC1B,IAAT,GAAgB6B,MAAM,CAACL,OAAD,CAAtB;EACD,GAHD;EAID,CAZM,MAYA,IAAI,OAAOO,YAAP,KAAwB,WAA5B,EAAyC;EAC9C;EACAb,EAAAA,SAAS,GAAG,qBAAM;EAChBa,IAAAA,YAAY,CAACd,cAAD,CAAZ;EACD,GAFD;EAGD,CALM,MAKA;EACL;EACAC,EAAAA,SAAS,GAAG,qBAAM;EAChBc,IAAAA,UAAU,CAACf,cAAD,EAAiB,CAAjB,CAAV;EACD,GAFD;EAGD;;EAEM,SAASgB,QAAT,CAAkBC,EAAlB,EAAsB;EAC3B;EACAnB,EAAAA,SAAS,CAAChD,IAAV,CAAemE,EAAf;;EACA,MAAI,CAAClB,OAAL,EAAc;EACZ;EACAA,IAAAA,OAAO,GAAG,IAAV;EACAE,IAAAA,SAAS;EACV;EACF;;EChDD,IAAIiB,KAAK,GAAG,EAAZ;EACA,IAAIC,GAAG,GAAG,EAAV;;EACA,SAASC,mBAAT,GAA+B;EAC7B,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,KAAK,CAAC/D,MAAlC,EAA0CkE,KAAK,EAA/C,EAAmD;EACjD;EACAH,IAAAA,KAAK,CAACG,KAAD,CAAL,CAAaC,GAAb;EACD,GAJ4B;;;EAM7BJ,EAAAA,KAAK,GAAG,EAAR;EACAC,EAAAA,GAAG,GAAG,EAAN;EACD;;;EAGM,SAASI,YAAT,CAAsB3E,OAAtB,EAA+B;EACpC,MAAMN,EAAE,GAAGM,OAAO,CAACN,EAAnB,CADoC;;EAGpC,MAAI6E,GAAG,CAAC7E,EAAD,CAAH,KAAYkF,SAAhB,EAA2B;EACzB;EACAN,IAAAA,KAAK,CAACpE,IAAN,CAAWF,OAAX;EACAuE,IAAAA,GAAG,CAAC7E,EAAD,CAAH,GAAU,IAAV,CAHyB;;EAKzB0E,IAAAA,QAAQ,CAACI,mBAAD,CAAR;EACD;EACF;;ECxBM,IAAMK,WAAW,GAAG,CAAC,WAAD,EAAc,WAAd,EAA2B,QAA3B,CAApB;;ECCA,IAAMC,eAAe,GAAG,CAC7B,cAD6B,EAE7B,SAF6B,EAG7B,aAH6B,EAI7B,SAJ6B,EAK7B,cAL6B,EAM7B,SAN6B,EAO7B,eAP6B,EAQ7B,WAR6B,CAAxB;;EAYP,IAAMC,MAAM,GAAG,EAAf;;EAGA,SAASC,SAAT,CAAmBC,SAAnB,EAA8BC,QAA9B,EAAwC;EACtC,MAAIA,QAAJ,EAAc;EACZ,QAAID,SAAJ,EAAe;EACb,aAAOA,SAAS,CAACE,MAAV,CAAiBD,QAAjB,CAAP;EACD,KAFD,MAEO;EACL,aAAO,CAACA,QAAD,CAAP;EACD;EACF,GAND,MAMO;EACL,WAAOD,SAAP;EACD;EACF;;;EAGD,SAASG,WAAT,CAAqBH,SAArB,EAAgCC,QAAhC,EAA0C;EACxC,MAAMG,GAAG,GAAGzE,MAAM,CAACC,MAAP,CAAcoE,SAAd,CAAZ,CADwC;;EAExC,MAAIC,QAAJ,EAAc;EACZ,SAAK,IAAII,CAAT,IAAcJ,QAAd,EAAwB;EACtBG,MAAAA,GAAG,CAACC,CAAD,CAAH,GAASJ,QAAQ,CAACI,CAAD,CAAjB;EACD;EACF;;EACD,SAAOD,GAAP;EACD;;EAEDP,eAAe,CAAC/E,OAAhB,CAAwB,UAACwF,IAAD,EAAU;EAChCR,EAAAA,MAAM,CAACQ,IAAD,CAAN,GAAeP,SAAf;EACD,CAFD;EAGAH,WAAW,CAAC9E,OAAZ,CAAoB,UAACyF,IAAD,EAAU;EAC5BT,EAAAA,MAAM,CAACS,IAAI,GAAG,GAAR,CAAN,GAAqBJ,WAArB;EACD,CAFD;EAIO,SAASK,YAAT,CAAsBC,MAAtB,EAA8BC,KAA9B,EAAqC;EAC1C,MAAMC,OAAO,GAAG,EAAhB,CAD0C;;EAG1C,OAAK,IAAIN,CAAT,IAAcI,MAAd,EAAsB;EACpBG,IAAAA,UAAU,CAACP,CAAD,CAAV;EACD,GALyC;;;EAO1C,OAAK,IAAIA,EAAT,IAAcK,KAAd,EAAqB;EACnB,QAAI,CAACD,MAAM,CAACI,cAAP,CAAsBR,EAAtB,CAAL,EAA+B;EAC7BO,MAAAA,UAAU,CAACP,EAAD,CAAV;EACD;EACF;;EAED,WAASO,UAAT,CAAoBP,CAApB,EAAuB;EACrB;EACA,QAAIP,MAAM,CAACO,CAAD,CAAV,EAAe;EACbM,MAAAA,OAAO,CAACN,CAAD,CAAP,GAAaP,MAAM,CAACO,CAAD,CAAN,CAAUI,MAAM,CAACJ,CAAD,CAAhB,EAAqBK,KAAK,CAACL,CAAD,CAA1B,CAAb;EACD,KAFD,MAEO;EACL;EACAM,MAAAA,OAAO,CAACN,CAAD,CAAP,GAAaK,KAAK,CAACL,CAAD,CAAL,GAAWK,KAAK,CAACL,CAAD,CAAhB,GAAsBI,MAAM,CAACJ,CAAD,CAAzC;EACD;EACF;;EACD,SAAOM,OAAP;EACD;EAEM,SAASG,QAAT,CAAkB5D,IAAlB,EAAwB;EAC7B,MAAI,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,IAAI,IAAxC,EAA8C;EAC5C,WAAO,KAAP;EACD;;EACD,SAAO,IAAP;EACD;EAEM,SAAS6D,aAAT,CAAuBC,OAAvB,EAAgC;EACrC;EACA,MAAIC,GAAG,GACL,+CACA,2EADA,GAEA,oEAFA,GAGA,wEAHA,GAIA,6EAJA,GAKA,2DALA,GAMA,kDANA,GAOA,yEAPA,GAQA,kCARA,GASA,uCATA,GAUA,yDAXF;EAYA,MAAIC,GAAG,GAAG,EAAV;EACAD,EAAAA,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAerG,OAAf,CAAuB,UAACsG,GAAD,EAAS;EAC9BF,IAAAA,GAAG,CAACE,GAAD,CAAH,GAAW,IAAX;EACD,GAFD;EAGA,SAAOF,GAAG,CAACF,OAAD,CAAV;EACD;;EC7FD,IAAIvG,EAAE,GAAG,CAAT;;MAEqB4G;EACnB,mBAAYC,EAAZ,EAAgBC,QAAhB,EAA0BnC,EAA1B,EAA8BuB,OAA9B,EAAuC;EAAA;;EACrC,SAAKW,EAAL,GAAUA,EAAV;EACA,SAAKC,QAAL,GAAgBA,QAAhB;EACA,SAAKnC,EAAL,GAAUA,EAAV,CAHqC;;EAIrC,SAAKuB,OAAL,GAAeA,OAAf,CAJqC;;EAKrC,SAAKlG,EAAL,GAAUA,EAAE,EAAZ,CALqC;;EAMrC,SAAK+G,IAAL,GAAY,EAAZ,CANqC;;EAOrC,SAAKC,MAAL,GAAc,IAAIC,GAAJ,EAAd,CAPqC;;EAQrC,SAAKC,IAAL,GAAYhB,OAAO,CAACgB,IAApB,CARqC;;EASrC,SAAKC,IAAL,GAAYjB,OAAO,CAACiB,IAApB,CATqC;;EAUrC,SAAKC,KAAL,GAAa,KAAKD,IAAlB,CAVqC;EAWrC;;EACA,QAAI,OAAOL,QAAP,KAAoB,UAAxB,EAAoC;EAClC,WAAKO,MAAL,GAAcP,QAAd;EACD,KAFD,MAEO;EACL,WAAKO,MAAL,GAAc,YAAY;EACxB;EACA,YAAIC,IAAI,GAAGR,QAAQ,CAACJ,KAAT,CAAe,GAAf,CAAX;EACA,YAAID,GAAG,GAAGI,EAAV;;EACA,aAAK,IAAIlE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2E,IAAI,CAACzG,MAAzB,EAAiC8B,CAAC,EAAlC,EAAsC;EACpC8D,UAAAA,GAAG,GAAGA,GAAG,CAACa,IAAI,CAAC3E,CAAD,CAAL,CAAT,CADoC;EAErC;;EACD,eAAO8D,GAAP;EACD,OARD;EASD,KAxBoC;;;EA0BrC,SAAKxE,KAAL,GAAa,KAAKkF,IAAL,GAAYjC,SAAZ,GAAwB,KAAKjC,GAAL,EAArC;EACD;;;;aACD,eAAM;EACJvC,MAAAA,UAAU,CAAC,IAAD,CAAV,CADI;;EAEJ,UAAMiF,GAAG,GAAG,KAAK0B,MAAL,CAAYE,IAAZ,CAAiB,KAAKV,EAAtB,CAAZ,CAFI;;EAGJlG,MAAAA,SAAS,GAHL;;EAIJ,aAAOgF,GAAP;EACD;;;;aAED,gBAAO7D,GAAP,EAAY;EACV,UAAI9B,EAAE,GAAG8B,GAAG,CAAC9B,EAAb;;EACA,UAAI,CAAC,KAAKgH,MAAL,CAAYnC,GAAZ,CAAgB7E,EAAhB,CAAL,EAA0B;EACxB,aAAKgH,MAAL,CAAYQ,GAAZ,CAAgBxH,EAAhB;EACA,aAAK+G,IAAL,CAAUvG,IAAV,CAAesB,GAAf,EAFwB;;EAIxBA,QAAAA,GAAG,CAAC2F,MAAJ,CAAW,IAAX;EACD;EACF;;;;aAED,kBAAS;EACP;EACA,UAAI,KAAKN,IAAT,EAAe;EACb,aAAKC,KAAL,GAAa,IAAb;EACD,OAFD,MAEK;EACH;EACA;EACAnC,QAAAA,YAAY,CAAC,IAAD,CAAZ;EACD;EACF;;;aACD,oBAAW;EACT,WAAKhD,KAAL,GAAa,KAAKgB,GAAL,EAAb;EACA,WAAKmE,KAAL,GAAa,KAAb;EACD;;;aACD,kBAAQ;EACN;EACA,UAAIzE,CAAC,GAAC,KAAKoE,IAAL,CAAUlG,MAAhB;;EACA,aAAM8B,CAAC,EAAP,EAAU;EACR,aAAKoE,IAAL,CAAUpE,CAAV,EAAaO,MAAb,GADQ;EAET;EACF;;;aACD,eAAM;EACJ,UAAMwE,MAAM,GAAG,KAAKzE,GAAL,EAAf,CADI;;EAEJ,UAAM0E,MAAM,GAAG,KAAK1F,KAApB,CAFI;;EAGJ,WAAKA,KAAL,GAAayF,MAAb,CAHI;;EAIJ,UAAI,KAAKR,IAAT,EAAe;EACb,YAAGQ,MAAM,KAAGC,MAAT,IAAiBtB,QAAQ,CAACqB,MAAD,CAA5B,EAAqC;EACnC,eAAK/C,EAAL,CAAQ4C,IAAR,CAAa,KAAKV,EAAlB,EAAsBa,MAAtB,EAA8BC,MAA9B;EACD;EACF,OAJD,MAIO;EACL;EACA,aAAKhD,EAAL,CAAQ4C,IAAR,CAAa,KAAKV,EAAlB;EACD;EACF;;;;;;ECjFH;;EACO,SAASe,SAAT,CAAmBf,EAAnB,EAAuB;EAC5B;EACA,MAAMgB,IAAI,GAAGhB,EAAE,CAACiB,QAAhB;;EACA,MAAID,IAAI,CAACE,KAAT,EAAgB;;EAGhB,MAAIF,IAAI,CAACG,OAAT,EAAkB;;EAGlB,MAAIH,IAAI,CAACpF,IAAT,EAAe;EACb;EACAwF,IAAAA,QAAQ,CAACpB,EAAD,CAAR;EACD;;EACD,MAAIgB,IAAI,CAACK,QAAT,EAAmB;EACjBC,IAAAA,YAAY,CAACtB,EAAD,CAAZ;EACD;;EACD,MAAIgB,IAAI,CAACO,KAAT,EAAgB;EACdC,IAAAA,SAAS,CAACxB,EAAD,CAAT;EACD;EACF;;;EAID,SAASoB,QAAT,CAAkBpB,EAAlB,EAAsB;EACpB,MAAIpE,IAAI,GAAGoE,EAAE,CAACiB,QAAH,CAAYrF,IAAvB,CADoB;EAGpB;;EACAA,EAAAA,IAAI,GAAGoE,EAAE,CAACyB,KAAH,GAAW,OAAO7F,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAAC8E,IAAL,CAAUV,EAAV,CAA7B,GAA6CpE,IAA/D,CAJoB;;EAOpB,OAAK,IAAIG,GAAT,IAAgBH,IAAhB,EAAsB;EACpB8F,IAAAA,KAAK,CAAC1B,EAAD,WAAcjE,GAAd,CAAL;EACD,GATmB;;;EAYpBG,EAAAA,OAAO,CAACN,IAAD,CAAP;EACD;;EACD,SAAS0F,YAAT,CAAsBtB,EAAtB,EAA0B;EACxB,MAAMqB,QAAQ,GAAGrB,EAAE,CAACiB,QAAH,CAAYI,QAA7B;EAEA,MAAMM,QAAQ,GAAI3B,EAAE,CAAC4B,iBAAH,GAAuB,EAAzC,CAHwB;;EAKxB,OAAK,IAAI7C,CAAT,IAAcsC,QAAd,EAAwB;EACtB,QAAMQ,OAAO,GAAGR,QAAQ,CAACtC,CAAD,CAAxB,CADsB;;EAEtB,QAAMyB,MAAM,GAAG,OAAOqB,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CA,OAAO,CAACzF,GAAjE,CAFsB;EAGtB;;EACAuF,IAAAA,QAAQ,CAAC5C,CAAD,CAAR,GAAc,IAAIgB,OAAJ,CAAYC,EAAZ,EAAgBQ,MAAhB,EAAwB,YAAM,EAA9B,EAAkC;EAAEF,MAAAA,IAAI,EAAE;EAAR,KAAlC,CAAd;EACAwB,IAAAA,cAAc,CAAC9B,EAAD,EAAKjB,CAAL,EAAQ8C,OAAR,CAAd;EACD;EACF;;EAED,IAAME,wBAAwB,GAAG;EAC/BzG,EAAAA,UAAU,EAAE,IADmB;EAE/BE,EAAAA,YAAY,EAAE,IAFiB;EAG/BY,EAAAA,GAAG,EAAE,eAAM,EAHoB;EAI/BG,EAAAA,GAAG,EAAE,eAAM;EAJoB,CAAjC;;EAMA,SAASuF,cAAT,CAAwBxI,MAAxB,EAAgCyC,GAAhC,EAAqC8F,OAArC,EAA8C;EAC5C,MAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;EACjC;EACAE,IAAAA,wBAAwB,CAAC3F,GAAzB,GAA+B4F,oBAAoB,CAACjG,GAAD,CAAnD;EACD,GAHD,MAGO;EACLgG,IAAAA,wBAAwB,CAAC3F,GAAzB,GAA+B4F,oBAAoB,CAACjG,GAAD,CAAnD;EACAgG,IAAAA,wBAAwB,CAACxF,GAAzB,GAA+BsF,OAAO,CAACtF,GAAvC;EACD;;EACDlC,EAAAA,MAAM,CAACgB,cAAP,CAAsB/B,MAAtB,EAA8ByC,GAA9B,EAAmCgG,wBAAnC;EACD;;EAED,SAASC,oBAAT,CAA8BjG,GAA9B,EAAmC;EACjC,SAAO,YAAY;EACjB,QAAMtC,OAAO,GAAG,KAAKmI,iBAAL,CAAuB7F,GAAvB,CAAhB,CADiB;;EAEjB,QAAItC,OAAJ,EAAa;EACX,UAAIA,OAAO,CAAC8G,KAAZ,EAAmB;EACjB9G,QAAAA,OAAO,CAACwI,QAAR,GADiB;EAEjB;;EACA,YAAI7I,GAAG,CAACE,MAAR,EAAgB;EACdG,UAAAA,OAAO,CAAC4C,MAAR;EACD;EACF;;EACD,aAAO5C,OAAO,CAAC2B,KAAf;EACD;EACF,GAZD;EAaD;;;EAGD,SAASoG,SAAT,CAAmBxB,EAAnB,EAAuB;EACrB,MAAIuB,KAAK,GAAGvB,EAAE,CAACiB,QAAH,CAAYM,KAAxB;;EADqB,6BAEZxC,CAFY;EAGnB,QAAMmD,OAAO,GAAGX,KAAK,CAACxC,CAAD,CAArB,CAHmB;;EAInB,QAAI7E,KAAK,CAACuB,OAAN,CAAcyG,OAAd,CAAJ,EAA4B;EAC1BA,MAAAA,OAAO,CAAC1I,OAAR,CAAgB,UAAC2I,MAAD,EAAY;EAC1BC,QAAAA,aAAa,CAACpC,EAAD,EAAKjB,CAAL,EAAQoD,MAAR,CAAb;EACD,OAFD;EAGD,KAJD,MAIO;EACLC,MAAAA,aAAa,CAACpC,EAAD,EAAKjB,CAAL,EAAQmD,OAAR,CAAb;EACD;EAVkB;;EAErB,OAAK,IAAInD,CAAT,IAAcwC,KAAd,EAAqB;EAAA,UAAZxC,CAAY;EASpB;EACF;;EAED,SAASqD,aAAT,CAAuBpC,EAAvB,EAA2BC,QAA3B,EAAqCiC,OAArC,EAA4D;EAAA,MAAd7C,OAAc,uEAAJ,EAAI;;EAC1D,MAAI,QAAO6C,OAAP,MAAmB,QAAvB,EAAiC;EAC/B7C,IAAAA,OAAO,GAAG6C,OAAV,CAD+B;;EAE/BA,IAAAA,OAAO,GAAGA,OAAO,CAACA,OAAlB,CAF+B;EAGhC;;EACD,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;EAC/BA,IAAAA,OAAO,GAAGlC,EAAE,CAACkC,OAAD,CAAZ;EACD;;EACD,SAAOlC,EAAE,CAACqC,MAAH,CAAUpC,QAAV,EAAoBiC,OAApB,EAA6B7C,OAA7B,CAAP;EACD;;EAED,SAASqC,KAAT,CAAeY,MAAf,EAAuBC,SAAvB,EAAkCxG,GAAlC,EAAuC;EACrC1B,EAAAA,MAAM,CAACgB,cAAP,CAAsBiH,MAAtB,EAA8BvG,GAA9B,EAAmC;EACjCK,IAAAA,GADiC,iBAC3B;EACJ,aAAOkG,MAAM,CAACC,SAAD,CAAN,CAAkBxG,GAAlB,CAAP;EACD,KAHgC;EAIjCQ,IAAAA,GAJiC,eAI7BC,QAJ6B,EAInB;EACZ8F,MAAAA,MAAM,CAACC,SAAD,CAAN,CAAkBxG,GAAlB,IAAyBS,QAAzB;EACD;EANgC,GAAnC;EAQD;;EAEM,SAASgG,UAAT,CAAoBC,GAApB,EAAyB;EAC9BA,EAAAA,GAAG,CAACtI,SAAJ,CAAckI,MAAd,GAAuB,UAAUpC,QAAV,EAAoBnC,EAApB,EAAwBuB,OAAxB,EAAiC;EACtD,QAAMW,EAAE,GAAG,IAAX,CADsD;;EAGtD,IAAc,IAAID,OAAJ,CAAYC,EAAZ,EAAgBC,QAAhB,EAA0BnC,EAA1B,oCAAmCuB,OAAnC;EAA4CgB,MAAAA,IAAI,EAAE;EAAlD;;EACd,QAAIhB,OAAO,CAACqD,SAAZ,EAAuB;EACrB5E,MAAAA,EAAE,GADmB;EAEtB;EACF,GAPD;EAQD;;ECvID;EACA,IAAM6E,MAAM,iCAAZ;;EACA,IAAMC,YAAY,iBAAUD,MAAV,kBAAwBA,MAAxB,MAAlB;;EACA,IAAME,YAAY,GAAG,IAAIC,MAAJ,aAAgBF,YAAhB,EAArB;;EACA,IAAMG,aAAa,GAAG,YAAtB;;EACA,IAAMC,MAAM,GAAG,IAAIF,MAAJ,gBAAmBF,YAAnB,YAAf;;EACA,IAAMK,SAAS,GAAG,2EAAlB;EAEA;;EACO,SAASC,KAAT,CAAeC,IAAf,EAAqB;EAC1B,MAAIC,IAAJ,EAAUC,aAAV,CAD0B;EAE1B;;EACA,MAAIC,KAAK,GAAG,EAAZ,CAH0B;;EAK1B,MAAMC,YAAY,GAAG,CAArB;EACA,MAAMC,SAAS,GAAG,CAAlB,CAN0B;;EAQ1B,WAASC,gBAAT,CAA0B/D,OAA1B,EAAmCgE,KAAnC,EAA0C;EACxC,WAAO;EACL5D,MAAAA,GAAG,EAAEJ,OADA;EAELT,MAAAA,IAAI,EAAEsE,YAFD;EAGLI,MAAAA,QAAQ,EAAE,EAHL;EAILD,MAAAA,KAAK,EAALA,KAJK;EAKLvE,MAAAA,MAAM,EAAE;EALH,KAAP;EAOD,GAhByB;;;EAmB1B,WAASyE,cAAT,OAA4C;EAAA,QAAlBlE,OAAkB,QAAlBA,OAAkB;EAAA,QAATgE,KAAS,QAATA,KAAS;EAC1C,QAAIG,OAAO,GAAGJ,gBAAgB,CAAC/D,OAAD,EAAUgE,KAAV,CAA9B;;EACA,QAAI,CAACN,IAAL,EAAW;EACTA,MAAAA,IAAI,GAAGS,OAAP;EACD;;EACDR,IAAAA,aAAa,GAAGQ,OAAhB;EACAP,IAAAA,KAAK,CAAC3J,IAAN,CAAWkK,OAAX;EACD,GA1ByB;;;EA6B1B,WAASC,YAAT,CAAsBpE,OAAtB,EAA+B;EAC7B;EACA;EACA,QAAImE,OAAO,GAAGP,KAAK,CAACvJ,GAAN,EAAd,CAH6B;;EAK7BsJ,IAAAA,aAAa,GAAGC,KAAK,CAACA,KAAK,CAACtJ,MAAN,GAAe,CAAhB,CAArB,CAL6B;;EAO7B,QAAIqJ,aAAJ,EAAmB;EACjBQ,MAAAA,OAAO,CAAC1E,MAAR,GAAiBkE,aAAjB;EACAA,MAAAA,aAAa,CAACM,QAAd,CAAuBhK,IAAvB,CAA4BkK,OAA5B;EACD;EACF,GAxCyB;;;EA2C1B,WAASE,WAAT,CAAqBC,IAArB,EAA2B;EACzB;EACAA,IAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;;EACA,QAAID,IAAJ,EAAU;EACRX,MAAAA,aAAa,CAACM,QAAd,CAAuBhK,IAAvB,CAA4B;EAC1BsF,QAAAA,IAAI,EAAEuE,SADoB;EAE1BQ,QAAAA,IAAI,EAAJA;EAF0B,OAA5B;EAID;EACF;;EACD,SAAOb,IAAP,EAAa;EACX;EACA,QAAIe,OAAO,GAAGf,IAAI,CAACgB,OAAL,CAAa,GAAb,CAAd,CAFW;;EAIX,QAAID,OAAO,KAAK,CAAhB,EAAmB;EACjB;EACA,UAAME,aAAa,GAAGC,aAAa,EAAnC;;EACA,UAAID,aAAJ,EAAmB;EACjB;EACAR,QAAAA,cAAc,CAACQ,aAAD,CAAd;EACA;EACD,OAPgB;;;EAUjB,UAAME,WAAW,GAAGnB,IAAI,CAACoB,KAAL,CAAWvB,MAAX,CAApB;;EACA,UAAIsB,WAAJ,EAAiB;EACfE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAX,CAAetK,MAAhB,CAAP;EACA8J,QAAAA,YAAY,CAACQ,WAAW,CAAC,CAAD,CAAZ,CAAZ;EACA;EACD;EACF;;EAED,QAAIN,IAAI,SAAR,CAtBW;;EAwBX,QAAIE,OAAO,IAAI,CAAf,EAAkB;EAChB;EACAF,MAAAA,IAAI,GAAGb,IAAI,CAACsB,SAAL,CAAe,CAAf,EAAkBP,OAAlB,CAAP;EACD;;EACD,QAAIF,IAAJ,EAAU;EACRQ,MAAAA,OAAO,CAACR,IAAI,CAAChK,MAAN,CAAP;EACA+J,MAAAA,WAAW,CAACC,IAAD,CAAX;EACD;EACF,GArFyB;;;EAwF1B,WAASK,aAAT,GAAyB;EACvB,QAAMK,KAAK,GAAGvB,IAAI,CAACoB,KAAL,CAAW1B,YAAX,CAAd;;EAEA,QAAI6B,KAAJ,EAAW;EACT,UAAMH,KAAK,GAAG;EACZ7E,QAAAA,OAAO,EAAEgF,KAAK,CAAC,CAAD,CADF;EAEZhB,QAAAA,KAAK,EAAE;EAFK,OAAd,CADS;;EAMTc,MAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAL,CAAS1K,MAAV,CAAP,CANS;EAST;EACA;;EACA,UAAI2K,GAAJ,EAASC,IAAT;;EACA,aACE,EAAED,GAAG,GAAGxB,IAAI,CAACoB,KAAL,CAAWxB,aAAX,CAAR,MACC6B,IAAI,GAAGzB,IAAI,CAACoB,KAAL,CAAWtB,SAAX,CADR,CADF,EAGE;EACAuB,QAAAA,OAAO,CAACI,IAAI,CAAC,CAAD,CAAJ,CAAQ5K,MAAT,CAAP;EACA4K,QAAAA,IAAI,GAAG;EACLC,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CADL;EAELxJ,UAAAA,KAAK,EAAEwJ,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD,CAF5B;;EAAA,SAAP;EAIAL,QAAAA,KAAK,CAACb,KAAN,CAAY/J,IAAZ,CAAiBiL,IAAjB;EACD;;EACD,UAAID,GAAJ,EAAS;EACP;EACAH,QAAAA,OAAO,CAAC,CAAD,CAAP;EACA,eAAOD,KAAP;EACD;EACF;EACF,GAxHyB;;;EA0H1B,WAASC,OAAT,CAAiBM,CAAjB,EAAoB;EAClB3B,IAAAA,IAAI,GAAGA,IAAI,CAACsB,SAAL,CAAeK,CAAf,CAAP;EACD,GA5HyB;;;EA8H1B,SAAO1B,IAAP;EACD;;ECxID,IAAM2B,YAAY,GAAG,0BAArB;EACA;EACA;EACA;;EAEA,SAASC,GAAT,CAAaC,IAAb,EAAmB;EACjB;EACA,MAAIA,IAAI,CAAChG,IAAL,IAAa,CAAjB,EAAoB;EAClB;EACA,WAAOiG,QAAQ,CAACD,IAAD,CAAf;EACD,GAHD,MAGO;EACL;EACA,QAAIjB,IAAI,GAAGiB,IAAI,CAACjB,IAAhB,CAFK;;EAIL,QAAI,CAACe,YAAY,CAACI,IAAb,CAAkBnB,IAAlB,CAAL,EAA8B;EAC5B,0BAAaoB,IAAI,CAACC,SAAL,CAAerB,IAAf,CAAb;EACD,KANI;;;EAQL,QAAIsB,SAAS,GAAIP,YAAY,CAACO,SAAb,GAAyB,CAA1C;EACA,QAAIC,MAAM,GAAG,EAAb;EACA,QAAIhB,KAAJ,EAAWrG,KAAX;;EAEA,WAAQqG,KAAK,GAAGQ,YAAY,CAACS,IAAb,CAAkBxB,IAAlB,CAAhB,EAA0C;EACtC;EACF9F,MAAAA,KAAK,GAAGqG,KAAK,CAACrG,KAAd;;EACA,UAAIA,KAAK,GAAGoH,SAAZ,EAAuB;EACrB;EACAC,QAAAA,MAAM,CAAC5L,IAAP,CAAYyL,IAAI,CAACC,SAAL,CAAerB,IAAI,CAACjJ,KAAL,CAAWuK,SAAX,EAAsBpH,KAAtB,CAAf,CAAZ;EACD,OANuC;;;EAQxCqH,MAAAA,MAAM,CAAC5L,IAAP,cAAkB4K,KAAK,CAAC,CAAD,CAAL,CAASkB,IAAT,EAAlB,QARwC;;EAUxCH,MAAAA,SAAS,GAAGpH,KAAK,GAAGqG,KAAK,CAAC,CAAD,CAAL,CAASvK,MAA7B;EACD,KAvBI;;;EAyBL,QAAIsL,SAAS,GAAGtB,IAAI,CAAChK,MAArB,EAA6B;EAC3BuL,MAAAA,MAAM,CAAC5L,IAAP,CAAYyL,IAAI,CAACC,SAAL,CAAerB,IAAI,CAACjJ,KAAL,CAAWuK,SAAX,CAAf,CAAZ;EACD,KA3BI;;;EA6BL,wBAAaC,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAb;EACD;EACF;;;EAGD,SAASC,QAAT,CAAkBjC,KAAlB,EAAyB;EACvB,MAAI/D,GAAG,GAAG,EAAV;;EACA,OAAK,IAAI7D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4H,KAAK,CAAC1J,MAA1B,EAAkC8B,CAAC,EAAnC,EAAuC;EACrC,QAAI8I,IAAI,GAAGlB,KAAK,CAAC5H,CAAD,CAAhB,CADqC;;EAGrC,QAAI8I,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;EAAA;EACzB,YAAIjF,GAAG,GAAG,EAAV;EACAgF,QAAAA,IAAI,CAACxJ,KAAL,CAAWyE,KAAX,CAAiB,GAAjB,EAAsBrG,OAAtB,CAA8B,UAACoM,IAAD,EAAU;EAAA,4BACnBA,IAAI,CAAC/F,KAAL,CAAW,GAAX,CADmB;EAAA;EAAA,cACjC9D,GADiC;EAAA,cAC5BX,KAD4B;;EAEtCwE,UAAAA,GAAG,CAAC7D,GAAD,CAAH,GAAWX,KAAX;EACD,SAHD;EAIAwJ,QAAAA,IAAI,CAACxJ,KAAL,GAAawE,GAAb;EANyB;EAO1B;;EACDD,IAAAA,GAAG,cAAOiF,IAAI,CAACC,IAAZ,cAAoBO,IAAI,CAACC,SAAL,CAAeT,IAAI,CAACxJ,KAApB,CAApB,MAAH;EACD;;EACD,oBAAWuE,GAAG,CAAC5E,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAX;EACD;;;EAGD,SAAS8K,WAAT,CAAqBC,EAArB,EAAyB;EACvB,MAAMnC,QAAQ,GAAGmC,EAAE,CAACnC,QAApB;;EACA,MAAIA,QAAJ,EAAc;EACZ,qBAAUA,QAAQ,CAACoC,GAAT,CAAa,UAACC,CAAD;EAAA,aAAOhB,GAAG,CAACgB,CAAD,CAAV;EAAA,KAAb,EAA4BN,IAA5B,CAAiC,GAAjC,CAAV;EACD;EACF;;;EAEM,SAASR,QAAT,CAAkBY,EAAlB,EAAsB;EAC3B,MAAInC,QAAQ,GAAGkC,WAAW,CAACC,EAAD,CAA1B;EACA,MAAIG,IAAI,iBAAUH,EAAE,CAAChG,GAAb,eACNgG,EAAE,CAACpC,KAAH,CAAS1J,MAAT,aAAqB2L,QAAQ,CAACG,EAAE,CAACpC,KAAJ,CAA7B,IAA4C,WADtC,SAELC,QAAQ,cAAOA,QAAP,IAAoB,EAFvB,MAAR;EAGA,SAAOsC,IAAP;EACD;;EC1EM,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;EAC3C;EACA;EACA;EACA,MAAIC,GAAG,GAAGlD,KAAK,CAACiD,QAAD,CAAf,CAJ2C;EAM3C;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;EACA,MAAIF,IAAI,GAAGf,QAAQ,CAACkB,GAAD,CAAnB,CAf2C;;EAiB3C,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,6BAAkCL,IAAlC,OAAf;EACA,SAAOI,QAAP;EACD;;ECrBD;EACO,SAASE,KAAT,CAAeC,QAAf,EAAyBC,KAAzB,EAAgC;EACrC;EACA;EACA;EACA,MAAI,CAACD,QAAL,EAAe;EACb;EACA,WAAOE,SAAS,CAACD,KAAD,CAAhB;EACD,GAHD,MAGO;EACL,QAAME,aAAa,GAAGH,QAAQ,CAACI,QAA/B;;EACA,QAAID,aAAJ,EAAmB;EACjB;EACA,UAAME,MAAM,GAAGL,QAAf;EACA,UAAMM,SAAS,GAAGD,MAAM,CAACE,UAAzB,CAHiB;;EAKjB,UAAMjB,EAAE,GAAGY,SAAS,CAACD,KAAD,CAApB,CALiB;EAOjB;;EACAK,MAAAA,SAAS,CAACE,YAAV,CAAuBlB,EAAvB,EAA2Be,MAAM,CAACI,WAAlC,EARiB;;EAUjBH,MAAAA,SAAS,CAACI,WAAV,CAAsBV,QAAtB;EACA,aAAOV,EAAP;EACD,KAZD,MAYO;EACL;EACA,UAAIU,QAAQ,CAAC1G,GAAT,KAAiB2G,KAAK,CAAC3G,GAA3B,EAAgC;EAC9B;EACA0G,QAAAA,QAAQ,CAACV,EAAT,CAAYiB,UAAZ,CAAuBI,YAAvB,CAAoCT,SAAS,CAACD,KAAD,CAA7C,EAAsDD,QAAQ,CAACV,EAA/D;EACD,OALI;;;EAOL,UAAI,CAACU,QAAQ,CAAC1G,GAAd,EAAmB;EACjB,YAAI0G,QAAQ,CAACxC,IAAT,KAAkByC,KAAK,CAACzC,IAA5B,EAAkC;EAChCwC,UAAAA,QAAQ,CAACV,EAAT,CAAYsB,WAAZ,GAA0BX,KAAK,CAACzC,IAAhC;EACD;EACF,OAXI;EAaL;;;EACA,UAAM8B,GAAE,GAAIW,KAAK,CAACX,EAAN,GAAWU,QAAQ,CAACV,EAAhC,CAdK;;;EAgBLuB,MAAAA,gBAAgB,CAACZ,KAAD,EAAQD,QAAQ,CAAC5K,IAAjB,CAAhB;EAEA,UAAM0L,KAAK,GAAGd,QAAQ,CAAC7C,QAAT,IAAqB,EAAnC,CAlBK;;EAmBL,UAAM4D,KAAK,GAAGd,KAAK,CAAC9C,QAAN,IAAkB,EAAhC,CAnBK;;EAoBL,UAAI2D,KAAK,CAACtN,MAAN,GAAe,CAAf,IAAoBuN,KAAK,CAACvN,MAAN,GAAe,CAAvC,EAA0C;EACxC;EACAwN,QAAAA,cAAc,CAAC1B,GAAD,EAAKwB,KAAL,EAAYC,KAAZ,CAAd;EACD,OAHD,MAGO,IAAID,KAAK,CAACtN,MAAV,EAAkB;EACvB;EACA8L,QAAAA,GAAE,CAAC2B,SAAH,GAAe,EAAf;EACD,OAHM,MAGA,IAAIF,KAAK,CAACvN,MAAV,EAAkB;EACvB;EACA,aAAK,IAAI8B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyL,KAAK,CAACvN,MAA1B,EAAkC8B,CAAC,EAAnC,EAAuC;EACrC,cAAMsD,KAAK,GAAGmI,KAAK,CAACzL,CAAD,CAAnB;;EACAgK,UAAAA,GAAE,CAAC4B,WAAH,CAAehB,SAAS,CAACtH,KAAD,CAAxB;EACD;EACF;EACF;EACF;EACF;;EAED,SAASuI,iBAAT,CAAyBlB,KAAzB,EAAgC;EAC9B;EACA;EACA,MAAI3K,CAAC,GAAG2K,KAAK,CAAC7K,IAAd;;EACA,MAAI,CAACE,CAAC,GAAGA,CAAC,CAACkD,IAAP,MAAiBlD,CAAC,GAAGA,CAAC,CAAC8L,IAAvB,CAAJ,EAAkC;EAChC9L,IAAAA,CAAC,CAAC2K,KAAD,CAAD;EACD,GAN6B;;;EAQ9B,MAAIA,KAAK,CAACoB,iBAAV,EAA6B;EAC3B,WAAO,IAAP;EACD;EACF;;;EAGD,SAASnB,SAAT,CAAmBD,KAAnB,EAA0B;EAAA,MAEtB3G,GAFsB,GAOpB2G,KAPoB,CAEtB3G,GAFsB;EAAA,MAOpB2G,KAPoB,CAGtB7K,IAHsB;EAAA,MAOpB6K,KAPoB,CAItB1K,GAJsB;EAAA,UAKtB4H,QALsB,GAOpB8C,KAPoB,CAKtB9C,QALsB;EAAA,MAMtBK,IANsB,GAOpByC,KAPoB,CAMtBzC;;EAGF,MAAI,OAAOlE,GAAP,KAAe,QAAnB,EAA6B;EAC3B,QAAI6H,iBAAe,CAAClB,KAAD,CAAnB,EAA4B;EAC1B;EACA,aAAOA,KAAK,CAACoB,iBAAN,CAAwBC,GAA/B;EACD,KAJ0B;;;EAM3BrB,IAAAA,KAAK,CAACX,EAAN,GAAWvI,QAAQ,CAACwK,aAAT,CAAuBjI,GAAvB,CAAX,CAN2B;;EAQ3BuH,IAAAA,gBAAgB,CAACZ,KAAD,CAAhB,CAR2B;;EAU3B9C,IAAAA,QAAQ,CAACnK,OAAT,CAAiB,UAAC4F,KAAD,EAAW;EAC1B,aAAOqH,KAAK,CAACX,EAAN,CAAS4B,WAAT,CAAqBhB,SAAS,CAACtH,KAAD,CAA9B,CAAP;EACD,KAFD;EAGD,GAbD,MAaO;EACL;EACAqH,IAAAA,KAAK,CAACX,EAAN,GAAWvI,QAAQ,CAACC,cAAT,CAAwBwG,IAAxB,CAAX;EACD;;EACD,SAAOyC,KAAK,CAACX,EAAb;EACD;;;EAGD,SAASuB,gBAAT,CAA0BZ,KAA1B,EAAgD;EAAA,MAAfuB,QAAe,uEAAJ,EAAI;EAC9C,MAAMC,QAAQ,GAAGxB,KAAK,CAAC7K,IAAN,IAAc,EAA/B;EAEA,MAAMkK,EAAE,GAAGW,KAAK,CAACX,EAAjB,CAH8C;EAK9C;;EACA,OAAK,IAAM/G,CAAX,IAAgBiJ,QAAhB,EAA0B;EACxB,QAAI,CAACC,QAAQ,CAAClJ,CAAD,CAAb,EAAkB;EAChB+G,MAAAA,EAAE,CAACoC,eAAH,CAAmBnJ,CAAnB;EACD;EACF,GAV6C;;;EAY9C,MAAMoJ,QAAQ,GAAGF,QAAQ,CAACG,KAAT,IAAkB,EAAnC;EACA,MAAMC,QAAQ,GAAGL,QAAQ,CAACI,KAAT,IAAkB,EAAnC;;EACA,OAAK,IAAMrM,GAAX,IAAkBsM,QAAlB,EAA4B;EAC1B,QAAI,CAACF,QAAQ,CAACpM,GAAD,CAAb,EAAoB;EAClB+J,MAAAA,EAAE,CAACsC,KAAH,CAASrM,GAAT,IAAgB,EAAhB;EACD;EACF,GAlB6C;;;EAoB9C,OAAK,IAAMA,IAAX,IAAkBkM,QAAlB,EAA4B;EAC1B,QAAIlM,IAAG,KAAK,OAAZ,EAAqB;EACnB,WAAK,IAAMuM,SAAX,IAAwBL,QAAQ,CAACG,KAAjC,EAAwC;EACtCtC,QAAAA,EAAE,CAACsC,KAAH,CAASE,SAAT,IAAsBL,QAAQ,CAACG,KAAT,CAAeE,SAAf,CAAtB;EACD;EACF,KAJD,MAIO,IAAIvM,IAAG,KAAK,OAAZ,EAAqB;EAC1B+J,MAAAA,EAAE,CAACyC,SAAH,GAAeN,QAAQ,SAAvB;EACD,KAFM,MAEA;EACL;EACAnC,MAAAA,EAAE,CAAC0C,YAAH,CAAgBzM,IAAhB,EAAqBkM,QAAQ,CAAClM,IAAD,CAA7B;EACD;EACF;EACF;;;EAGD,SAAS0M,WAAT,CAAqBjC,QAArB,EAA+BkC,QAA/B,EAAyC;EACvC,SAAOlC,QAAQ,CAAC1G,GAAT,KAAiB4I,QAAQ,CAAC5I,GAA1B,IAAiC0G,QAAQ,CAACzK,GAAT,KAAiB2M,QAAQ,CAAC3M,GAAlE;EACD;;;EAED,SAASyL,cAAT,CAAwBrI,MAAxB,EAAgCmI,KAAhC,EAAuCC,KAAvC,EAA8C;EAC5C,MAAIoB,aAAa,GAAG,CAApB,CAD4C;;EAE5C,MAAIC,aAAa,GAAGtB,KAAK,CAAC,CAAD,CAAzB,CAF4C;;EAG5C,MAAIuB,WAAW,GAAGvB,KAAK,CAACtN,MAAN,GAAe,CAAjC,CAH4C;;EAI5C,MAAI8O,WAAW,GAAGxB,KAAK,CAACuB,WAAD,CAAvB,CAJ4C;;EAM5C,MAAIE,aAAa,GAAG,CAApB,CAN4C;;EAO5C,MAAIC,aAAa,GAAGzB,KAAK,CAAC,CAAD,CAAzB;EACA,MAAI0B,WAAW,GAAG1B,KAAK,CAACvN,MAAN,GAAe,CAAjC;EACA,MAAIkP,WAAW,GAAG3B,KAAK,CAAC0B,WAAD,CAAvB,CAT4C;;EAY5C,WAASE,cAAT,CAAwBxF,QAAxB,EAAkC;EAChC,QAAIoC,GAAG,GAAG,EAAV;EACApC,IAAAA,QAAQ,CAACnK,OAAT,CAAiB,UAACoM,IAAD,EAAO1H,KAAP,EAAiB;EAChC6H,MAAAA,GAAG,CAACH,IAAI,CAAC7J,GAAN,CAAH,GAAgBmC,KAAhB;EACD,KAFD;EAGA,WAAO6H,GAAP;EACD,GAlB2C;;;EAoB5C,MAAIA,GAAG,GAAGoD,cAAc,CAAC7B,KAAD,CAAxB,CApB4C;;EAuB5C,SAAOqB,aAAa,IAAIE,WAAjB,IAAgCE,aAAa,IAAIE,WAAxD,EAAqE;EACnE;EACA,QAAI,CAACL,aAAL,EAAoB;EAClBA,MAAAA,aAAa,GAAGtB,KAAK,CAAC,EAAEqB,aAAH,CAArB;EACD,KAFD,MAEO,IAAI,CAACG,WAAL,EAAkB;EACvBA,MAAAA,WAAW,GAAGxB,KAAK,CAAC,EAAEuB,WAAH,CAAnB;EACD,KAFM,MAEA,IAAIJ,WAAW,CAACG,aAAD,EAAgBI,aAAhB,CAAf,EAA+C;EACpD;EACAzC,MAAAA,KAAK,CAACqC,aAAD,EAAgBI,aAAhB,CAAL,CAFoD;;EAGpDJ,MAAAA,aAAa,GAAGtB,KAAK,CAAC,EAAEqB,aAAH,CAArB;EACAK,MAAAA,aAAa,GAAGzB,KAAK,CAAC,EAAEwB,aAAH,CAArB;EACD,KALM,MAKA,IAAIN,WAAW,CAACK,WAAD,EAAcI,WAAd,CAAf,EAA2C;EAChD;EACA3C,MAAAA,KAAK,CAACuC,WAAD,EAAcI,WAAd,CAAL;EACAJ,MAAAA,WAAW,GAAGxB,KAAK,CAAC,EAAEuB,WAAH,CAAnB;EACAK,MAAAA,WAAW,GAAG3B,KAAK,CAAC,EAAE0B,WAAH,CAAnB;EACD,KALM,MAKA,IAAIR,WAAW,CAACG,aAAD,EAAgBM,WAAhB,CAAf,EAA6C;EAClD;EACA3C,MAAAA,KAAK,CAACqC,aAAD,EAAgBM,WAAhB,CAAL;EACA/J,MAAAA,MAAM,CAAC6H,YAAP,CAAoB4B,aAAa,CAAC9C,EAAlC,EAAsCgD,WAAW,CAAChD,EAAZ,CAAemB,WAArD,EAHkD;;EAIlD2B,MAAAA,aAAa,GAAGtB,KAAK,CAAC,EAAEqB,aAAH,CAArB;EACAO,MAAAA,WAAW,GAAG3B,KAAK,CAAC,EAAE0B,WAAH,CAAnB;EACD,KANM,MAMA,IAAIR,WAAW,CAACK,WAAD,EAAcE,aAAd,CAAf,EAA6C;EAClD;EACAzC,MAAAA,KAAK,CAACuC,WAAD,EAAcE,aAAd,CAAL;EACA7J,MAAAA,MAAM,CAAC6H,YAAP,CAAoB8B,WAAW,CAAChD,EAAhC,EAAoC8C,aAAa,CAAC9C,EAAlD;EACAgD,MAAAA,WAAW,GAAGxB,KAAK,CAAC,EAAEuB,WAAH,CAAnB;EACAG,MAAAA,aAAa,GAAGzB,KAAK,CAAC,EAAEwB,aAAH,CAArB;EACD,KANM,MAMA;EACL;EACA;EACA,UAAIK,SAAS,GAAGrD,GAAG,CAACiD,aAAa,CAACjN,GAAf,CAAnB;;EACA,UAAI,CAACqN,SAAL,EAAgB;EACd;EACAjK,QAAAA,MAAM,CAAC6H,YAAP,CAAoBN,SAAS,CAACsC,aAAD,CAA7B,EAA8CJ,aAAa,CAAC9C,EAA5D;EACD,OAHD,MAGO;EACL,YAAIuD,SAAS,GAAG/B,KAAK,CAAC8B,SAAD,CAArB,CADK;;EAEL9B,QAAAA,KAAK,CAAC8B,SAAD,CAAL,GAAmB/K,SAAnB,CAFK;;EAGLc,QAAAA,MAAM,CAAC6H,YAAP,CAAoBqC,SAAS,CAACvD,EAA9B,EAAkC8C,aAAa,CAAC9C,EAAhD,EAHK;;EAILS,QAAAA,KAAK,CAAC8C,SAAD,EAAYL,aAAZ,CAAL;EACD;EACF;EACF,GAjE2C;;;EAmE5C,MAAID,aAAa,IAAIE,WAArB,EAAkC;EAChC,SAAK,IAAInN,CAAC,GAAGiN,aAAb,EAA4BjN,CAAC,IAAImN,WAAjC,EAA8CnN,CAAC,EAA/C,EAAmD;EACjD;EACA,UAAMwN,GAAG,GACP/B,KAAK,CAAC0B,WAAW,GAAG,CAAf,CAAL,IAA0B,IAA1B,GAAiC,IAAjC,GAAwC1B,KAAK,CAAC0B,WAAW,GAAG,CAAf,CAAL,CAAuBnD,EADjE;EAEA3G,MAAAA,MAAM,CAAC6H,YAAP,CAAoBN,SAAS,CAACa,KAAK,CAACzL,CAAD,CAAN,CAA7B,EAAyCwN,GAAzC;EACD;EACF,GA1E2C;;;EA4E5C,MAAIX,aAAa,IAAIE,WAArB,EAAkC;EAChC,SAAK,IAAI/M,EAAC,GAAG6M,aAAb,EAA4B7M,EAAC,IAAI+M,WAAjC,EAA8C/M,EAAC,EAA/C,EAAmD;EACjD,UAAIsD,KAAK,GAAGkI,KAAK,CAACxL,EAAD,CAAjB;;EACA,UAAIsD,KAAK,IAAIf,SAAb,EAAwB;EACtBc,QAAAA,MAAM,CAAC+H,WAAP,CAAmB9H,KAAK,CAAC0G,EAAzB;EACD;EACF;EACF;EAEF;;EC/NM,SAASyD,cAAT,CAAwBvJ,EAAxB,EAA4B8F,EAA5B,EAAgC;EAErC;EACA;EACA;EAEA;EACA9F,EAAAA,EAAE,CAAC8H,GAAH,GAAShC,EAAT,CAPqC;EAUrC;;EACA0D,EAAAA,QAAQ,CAACxJ,EAAD,EAAK,aAAL,CAAR;;EACA,MAAIyJ,eAAe,GAAG,SAAlBA,eAAkB,GAAM;EAC1BzJ,IAAAA,EAAE,CAAC0J,OAAH,CAAW1J,EAAE,CAAC2J,OAAH,EAAX;EACD,GAFD;;EAGA,MAAI5J,OAAJ,CACEC,EADF,EAEEyJ,eAFF,EAGE,YAAM;EACJD,IAAAA,QAAQ,CAACxJ,EAAD,EAAK,cAAL,CAAR;EACD,GALH,EAME,IANF;EAQAwJ,EAAAA,QAAQ,CAACxJ,EAAD,EAAK,SAAL,CAAR;EACD;EAEM,SAAS4J,cAAT,CAAwBnH,GAAxB,EAA6B;EAClC;EACAA,EAAAA,GAAG,CAACtI,SAAJ,CAAcuP,OAAd,GAAwB,UAAUjD,KAAV,EAAiB;EACvC,QAAMzG,EAAE,GAAG,IAAX;EACA,QAAM6J,SAAS,GAAG7J,EAAE,CAAC8J,MAArB,CAFuC;;EAGvC9J,IAAAA,EAAE,CAAC8J,MAAH,GAAYrD,KAAZ;;EACA,QAAI,CAACoD,SAAL,EAAgB;EACd;EACA7J,MAAAA,EAAE,CAAC8H,GAAH,GAASvB,KAAK,CAACvG,EAAE,CAAC8H,GAAJ,EAASrB,KAAT,CAAd,CAFc;EAGf,KAHD,MAGO;EACLzG,MAAAA,EAAE,CAAC8H,GAAH,GAASvB,KAAK,CAACsD,SAAD,EAAYpD,KAAZ,CAAd,CADK;EAEN;EACF,GAVD;EAWD;EAEM,SAAS+C,QAAT,CAAkBxJ,EAAlB,EAAsBhB,IAAtB,EAA4B;EACjC;EACA,MAAM+K,QAAQ,GAAG/J,EAAE,CAACiB,QAAH,CAAYjC,IAAZ,CAAjB;;EACA,MAAI+K,QAAJ,EAAc;EACZ,SAAK,IAAIjO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiO,QAAQ,CAAC/P,MAA7B,EAAqC8B,CAAC,EAAtC,EAA0C;EACxCiO,MAAAA,QAAQ,CAACjO,CAAD,CAAR,CAAY4E,IAAZ,CAAiBV,EAAjB,EADwC;EAEzC;EACF;EACF;;EChDM,SAASgK,WAAT,CAAmBvH,GAAnB,EAAwB;EAC7BA,EAAAA,GAAG,CAACtI,SAAJ,CAAc8P,KAAd,GAAsB,UAAU5K,OAAV,EAAmB;EACvC,QAAMW,EAAE,GAAG,IAAX,CADuC;EAGvC;;EACAA,IAAAA,EAAE,CAACiB,QAAH,GAAc/B,YAAY,CAACc,EAAE,CAACkK,WAAH,CAAe7K,OAAhB,EAAyBA,OAAzB,CAA1B;EACAmK,IAAAA,QAAQ,CAACxJ,EAAD,EAAK,cAAL,CAAR,CALuC;;EAOvCe,IAAAA,SAAS,CAACf,EAAD,CAAT;EACAwJ,IAAAA,QAAQ,CAACxJ,EAAD,EAAK,SAAL,CAAR,CARuC;;EAUvC,QAAIA,EAAE,CAACiB,QAAH,CAAY6E,EAAhB,EAAoB;EAClB9F,MAAAA,EAAE,CAACmK,MAAH,CAAUnK,EAAE,CAACiB,QAAH,CAAY6E,EAAtB;EACD;EACF,GAbD,CAD6B;EAiB7B;;;EACArD,EAAAA,GAAG,CAACtI,SAAJ,CAAcgQ,MAAd,GAAuB,UAAUrE,EAAV,EAAc;EACnC,QAAM9F,EAAE,GAAG,IAAX;EACA,QAAMX,OAAO,GAAGW,EAAE,CAACiB,QAAnB;EACA6E,IAAAA,EAAE,GAAGvI,QAAQ,CAAC6M,aAAT,CAAuBtE,EAAvB,CAAL,CAHmC;;EAMnC,QAAI,CAACzG,OAAO,CAACgL,MAAb,EAAqB;EACnB;EACA,UAAIlE,QAAQ,GAAG9G,OAAO,CAAC8G,QAAvB;;EAEA,UAAI,CAACA,QAAD,IAAaL,EAAjB,EAAqB;EACnB;EACAK,QAAAA,QAAQ,GAAGL,EAAE,CAACwE,SAAd;EACD,OAPkB;;;EAUnB,UAAInE,QAAJ,EAAc;EACZ,YAAMkE,MAAM,GAAGnE,kBAAkB,CAACC,QAAD,CAAjC;EACA9G,QAAAA,OAAO,CAACgL,MAAR,GAAiBA,MAAjB;EACD;EACF,KApBkC;;;EAuBnC,WAAOd,cAAc,CAACvJ,EAAD,EAAK8F,EAAL,CAArB;EACD,GAxBD;EAyBD;;MC9CoByE,QACnB,eAAYzK,GAAZ,EAAiBlE,IAAjB,EAAuBG,GAAvB,EAA4B4H,QAA5B,EAAsCK,IAAtC,EAA4CwG,gBAA5C,EAA8D;EAAA;;EAC5DC,EAAAA,OAAO,CAACC,GAAR,CACE,uEADF,EAEEF,gBAFF;EAIA,OAAK1K,GAAL,GAAWA,GAAX;EACA,OAAKlE,IAAL,GAAYA,IAAZ;EACA,OAAKG,GAAL,GAAWA,GAAX;EACA,OAAK4H,QAAL,GAAgBA,QAAhB;EACA,OAAKK,IAAL,GAAYA,IAAZ;EACA,OAAKwG,gBAAL,GAAwBA,gBAAxB;EACD;EAII,SAASzC,aAAT,CAAuB/H,EAAvB,EAA2BF,GAA3B,EAAwD;EAAA,MAAxBlE,IAAwB,uEAAjB,EAAiB;EAC7D,MAAIG,GAAG,GAAGH,IAAI,CAACG,GAAf;;EAD6D,oCAAV4H,QAAU;EAAVA,IAAAA,QAAU;EAAA;;EAG7D,MAAIlE,aAAa,CAACK,GAAD,CAAjB,EAAwB;EACtB;EACA,WAAO,IAAIyK,KAAJ,CAAUzK,GAAV,EAAelE,IAAf,EAAqBG,GAArB,EAA0B4H,QAA1B,CAAP;EACD,GAHD,MAGO;EACL;EACA,QAAIgH,IAAI,GAAG3K,EAAE,CAACiB,QAAH,CAAY2J,UAAZ,CAAuB9K,GAAvB,CAAX,CAFK;;EAGL,WAAO6H,eAAe,CAAC3H,EAAD,EAAKF,GAAL,EAAUlE,IAAV,EAAgBG,GAAhB,EAAqB4H,QAArB,EAA+BgH,IAA/B,CAAtB;EACD;EACF;;EAED,SAAShD,eAAT,CAAyB3H,EAAzB,EAA6BF,GAA7B,EAAkClE,IAAlC,EAAwCG,GAAxC,EAA6C4H,QAA7C,EAAuDgH,IAAvD,EAA6D;EAC3D,MAAInL,QAAQ,CAACmL,IAAD,CAAZ,EAAoB;EAClBA,IAAAA,IAAI,GAAG3K,EAAE,CAACiB,QAAH,CAAY4J,KAAZ,CAAkBC,MAAlB,CAAyBH,IAAzB,CAAP;EACD,GAH0D;;;EAK3D/O,EAAAA,IAAI,CAACoD,IAAL,GAAY;EACV;EACA4I,IAAAA,IAFU,gBAELnB,KAFK,EAEE;EACV,UAAIrH,KAAK,GAAIqH,KAAK,CAACoB,iBAAN,GAA0B,IAAI8C,IAAJ,CAAS;EAAEI,QAAAA,YAAY,EAAE;EAAhB,OAAT,CAAvC,CADU;;EAEV3L,MAAAA,KAAK,CAAC+K,MAAN,GAFU;EAGX;EALS,GAAZ,CAL2D;;EAc3D,SAAO,IAAII,KAAJ,yBACYI,IAAI,CAACK,GADjB,cACwBlL,GADxB,GAELlE,IAFK,EAGLG,GAHK,EAILsC,SAJK,EAKLA,SALK,EAML;EACEsM,IAAAA,IAAI,EAAJA,IADF;EAEEhH,IAAAA,QAAQ,EAARA;EAFF,GANK,CAAP;EAWD;;;EAGM,SAASnG,cAAT,CAAwBwC,EAAxB,EAA4BgE,IAA5B,EAAkC;EACvC,SAAO,IAAIuG,KAAJ,CAAUlM,SAAV,EAAqBA,SAArB,EAAgCA,SAAhC,EAA2CA,SAA3C,EAAsD2F,IAAtD,CAAP;EACD;;EC1DM,SAASiH,WAAT,CAAqBxI,GAArB,EAA0B;EAC/B;EACAA,EAAAA,GAAG,CAACtI,SAAJ,CAAc+Q,EAAd,GAAmB,YAAmB;EAAA,sCAANzQ,IAAM;EAANA,MAAAA,IAAM;EAAA;;EACpC;EACA,WAAOsN,aAAa,MAAb,UAAc,IAAd,SAAsBtN,IAAtB,EAAP;EACD,GAHD;;EAKAgI,EAAAA,GAAG,CAACtI,SAAJ,CAAcgR,EAAd,GAAmB,UAAUnH,IAAV,EAAgB;EACjC;EACA,WAAOxG,cAAc,CAAC,IAAD,EAAMwG,IAAN,CAArB;EACD,GAHD;;EAIAvB,EAAAA,GAAG,CAACtI,SAAJ,CAAciR,EAAd,GAAmB,UAAUC,GAAV,EAAe;EAChC;EACA,WAAOA,GAAG,IAAI,IAAP,GACH,EADG,GAEH,QAAOA,GAAP,MAAe,QAAf,GACAjG,IAAI,CAACC,SAAL,CAAegG,GAAf,CADA,GAEAA,GAJJ;EAKD,GAPD;;EASA5I,EAAAA,GAAG,CAACtI,SAAJ,CAAcwP,OAAd,GAAwB,YAAY;EAElC,QAAM3J,EAAE,GAAG,IAAX,CAFkC;;EAAA,QAI1BqK,MAJ0B,GAIfrK,EAAE,CAACiB,QAJY,CAI1BoJ,MAJ0B;EAKlCI,IAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ,EAAqEL,MAArE,EALkC;;EAOlC,QAAM5D,KAAK,GAAG4D,MAAM,CAAC3J,IAAP,CAAYV,EAAZ,CAAd;EACA,WAAOyG,KAAP;EACD,GATD,CApB+B;;;EAgC/BhE,EAAAA,GAAG,CAACtI,SAAJ,CAAcmR,SAAd,GAA0BzN,QAA1B;EACD;;ECnCc,SAASmM,SAAT,CAAmBvH,GAAnB,EAAuB;EACpCA,EAAAA,GAAG,CAAC8I,KAAJ,GAAY,UAAUA,KAAV,EAAiB;EAC3B;EACE,SAAKlM,OAAL,GAAaH,YAAY,CAAC,KAAKG,OAAN,EAAckM,KAAd,CAAzB;EACH,GAHD;EAID;;ECLc,SAASC,kBAAT,CAA4B/I,GAA5B,EAAiC;EAC9CnE,EAAAA,WAAW,CAAC9E,OAAZ,CAAoB,UAACyF,IAAD,EAAU;EAC5BwD,IAAAA,GAAG,CAACxD,IAAD,CAAH,GAAY,UAAS9F,EAAT,EAAasS,UAAb,EAAyB;EACnC,UAAIxM,IAAI,KAAK,WAAb,EAA0B;EACxB;EACA;EACAwM,QAAAA,UAAU,GAAG,KAAKpM,OAAL,CAAawL,KAAb,CAAmBC,MAAnB,CAA0BW,UAA1B,CAAb;EACD;;EAGD,WAAKpM,OAAL,CAAaJ,IAAI,GAAG,GAApB,EAAyB9F,EAAzB,IAA+BsS,UAA/B;EACD,KATD;EAUD,GAXD;EAYD;;ECbc,SAASC,UAAT,CAAoBjJ,GAApB,EAAyB;EACtC,MAAIuI,GAAG,GAAG,CAAV,CADsC;;EAGtCvI,EAAAA,GAAG,CAACqI,MAAJ,GAAa,UAAUa,aAAV,EAAyB;EACpC;EACA,QAAMC,GAAG,GAAG,SAASC,YAAT,CAAsBxM,OAAtB,EAA+B;EACzC,WAAK4K,KAAL,CAAW5K,OAAX;EACD,KAFD;;EAGAuM,IAAAA,GAAG,CAACZ,GAAJ,GAAUA,GAAG,EAAb,CALoC;;EAMpCY,IAAAA,GAAG,CAACzR,SAAJ,GAAgBE,MAAM,CAACC,MAAP,CAAc,KAAKH,SAAnB,CAAhB,CANoC;;EAOpCyR,IAAAA,GAAG,CAACzR,SAAJ,CAAc+P,WAAd,GAA4B0B,GAA5B,CAPoC;;EAQpCA,IAAAA,GAAG,CAACvM,OAAJ,GAAcH,YAAY,CAAC,KAAKG,OAAN,EAAesM,aAAf,CAA1B,CARoC;;EASpC,WAAOC,GAAP;EACD,GAVD;EAWD;;ECTM,SAASE,aAAT,CAAuBrJ,GAAvB,EAA4B;EACjCA,EAAAA,GAAG,CAACpD,OAAJ,GAAc,EAAd,CADiC;;EAEjC2K,EAAAA,SAAS,CAACvH,GAAD,CAAT;EACAnE,EAAAA,WAAW,CAAC9E,OAAZ,CAAoB,UAACyF,IAAD,EAAU;EAC5BwD,IAAAA,GAAG,CAACpD,OAAJ,CAAYJ,IAAI,GAAG,GAAnB,IAA0B,EAA1B;EACD,GAFD;EAGAwD,EAAAA,GAAG,CAACpD,OAAJ,CAAYwL,KAAZ,GAAoBpI,GAApB,CANiC;;EAQjCiJ,EAAAA,UAAU,CAACjJ,GAAD,CAAV,CARiC;;EASjC+I,EAAAA,kBAAkB,CAAC/I,GAAD,CAAlB,CATiC;EAUlC;;ECVD,SAASA,GAAT,CAAapD,OAAb,EAAsB;EACpB;EACA,OAAK4K,KAAL,CAAW5K,OAAX;EACD;EAED;;;AACA2K,aAAS,CAACvH,GAAD,CAAT;EACAwI,WAAW,CAACxI,GAAD,CAAX;EACAmH,cAAc,CAACnH,GAAD,CAAd;EACAD,UAAU,CAACC,GAAD,CAAV;EACAqJ,aAAa,CAACrJ,GAAD,CAAb;;;;;;;;"}